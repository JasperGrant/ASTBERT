{
    "addDependencyJars": [
        "program (expression_statement (method_invocation (JarUtils addDependencyJars argument_list (conf method_invocation (Collections type_arguments (generic_type (Class type_arguments (wildcard )))singletonList argument_list (method_invocation (getClass argument_list )))))))"
    ],
    "addIndexCol": [
        "program (expression_statement (method_invocation (colMap put argument_list (method_invocation (encode argument_list (cf cq ))colType ))))"
    ],
    "addIterators": [
        "program (enhanced_for_statement (IteratorSetting is iterators block (expression_statement (method_invocation (AccumuloInputFormat addIterator argument_list (conf is ))))))"
    ],
    "addTable": [
        "program (if_statement (parenthesized_expression (field_access (this.simulate this.simulate ))block (expression_statement (method_invocation (LOG info argument_list (\"Simulating adding table: {}\" tableName ))))block (expression_statement (method_invocation (LOG debug argument_list (\"Adding table: {}\" tableName )))local_variable_declaration (BatchWriter variable_declarator (bw null ))local_variable_declaration (String variable_declarator (table method_invocation (tableName toString argument_list )))if_statement (parenthesized_expression (binary_expression (field_access (this.createTables this.createTables )unary_expression (method_invocation (method_invocation (field_access (this.conn this.conn )tableOperations argument_list )exists argument_list (table )))))block (try_statement (block (expression_statement (method_invocation (method_invocation (field_access (this.conn this.conn )tableOperations argument_list )create argument_list (table ))))catch_clause (catch_formal_parameter (catch_type (AccumuloSecurityException )var8 )block (expression_statement (method_invocation (LOG error argument_list (\"Accumulo security violation creating {}\" table var8 )))throw_statement (var8 )))catch_clause (catch_formal_parameter (catch_type (TableExistsException )var9 )block (expression_statement (method_invocation (LOG warn argument_list (\"Table Exists {}\" table var9 ))))))))try_statement (block (expression_statement (assignment_expression (bw method_invocation (field_access (this.mtbw this.mtbw )getBatchWriter argument_list (table )))))catch_clause (catch_formal_parameter (catch_type (TableNotFoundException )var5 )block (expression_statement (method_invocation (LOG error argument_list (\"Accumulo table {} doesn't exist and cannot be created.\" table var5 )))throw_statement (object_creation_expression (AccumuloException argument_list (var5 ))))))if_statement (parenthesized_expression (binary_expression (bw null ))block (expression_statement (method_invocation (field_access (this.bws this.bws )put argument_list (tableName bw ))))))))"
    ],
    "addTokenFromUserToJobConf": [
        "program (expression_statement (method_invocation (checkNotNull argument_list (user \"Provided UGI was null\" )))expression_statement (method_invocation (checkNotNull argument_list (jobConf \"JobConf was null\" )))local_variable_declaration (generic_type (Token type_arguments (wildcard ))variable_declarator (accumuloToken method_invocation (getAccumuloToken argument_list (user ))))if_statement (parenthesized_expression (binary_expression (null accumuloToken ))block (expression_statement (method_invocation (log error argument_list (binary_expression (\"Could not find accumulo token in user: \" method_invocation (user getTokens argument_list )))))throw_statement (object_creation_expression (IOException argument_list (\"Could not find Accumulo Token in user's tokens\" )))))expression_statement (method_invocation (mergeTokenIntoJobConf argument_list (jobConf accumuloToken ))))"
    ],
    "add": [
        "program (expression_statement (method_invocation (Preconditions checkArgument argument_list (binary_expression (method_invocation (method_invocation (schema columns argument_list )size argument_list )field_access (values.length values.length )))))local_variable_declaration (GenericRecord variable_declarator (record method_invocation (GenericRecord create argument_list (schema ))))for_statement (local_variable_declaration (integral_type variable_declarator (i 0 ))binary_expression (i field_access (values.length values.length ))update_expression (i )block (expression_statement (method_invocation (record set argument_list (i array_access (values i ))))))expression_statement (method_invocation (records add argument_list (record )))return_statement (this ))"
    ],
    "checkOutputSpecs": [
        " "
    ],
    "clear": [
        "program (expression_statement (method_invocation (hookList clear argument_list )))"
    ],
    "commitCreateTable": [
        "program (if_statement (parenthesized_expression (binary_expression (icebergTable null ))block (expression_statement (method_invocation (setFileFormat argument_list (method_invocation (catalogProperties getProperty argument_list (field_access (TableProperties.DEFAULT_FILE_FORMAT TableProperties.DEFAULT_FILE_FORMAT ))))))local_variable_declaration (String variable_declarator (metadataLocation method_invocation (method_invocation (hmsTable getParameters argument_list )get argument_list (field_access (BaseMetastoreTableOperations.METADATA_LOCATION_PROP BaseMetastoreTableOperations.METADATA_LOCATION_PROP )))))local_variable_declaration (Table variable_declarator (table ))if_statement (parenthesized_expression (binary_expression (metadataLocation null ))block (expression_statement (assignment_expression (table method_invocation (Catalogs registerTable argument_list (conf catalogProperties metadataLocation )))))block (expression_statement (assignment_expression (table method_invocation (Catalogs createTable argument_list (conf catalogProperties ))))))if_statement (parenthesized_expression (unary_expression (method_invocation (HiveTableUtil isCtas argument_list (catalogProperties ))))block (return_statement ))local_variable_declaration (String variable_declarator (tableIdentifier method_invocation (catalogProperties getProperty argument_list (field_access (Catalogs.NAME Catalogs.NAME )))))expression_statement (method_invocation (SessionStateUtil addResource argument_list (conf field_access (InputFormatConfig.CTAS_TABLE_NAME InputFormatConfig.CTAS_TABLE_NAME )tableIdentifier )))expression_statement (method_invocation (SessionStateUtil addResource argument_list (conf tableIdentifier table )))expression_statement (method_invocation (HiveTableUtil createFileForTableObject argument_list (table conf ))))))"
    ],
    "commitDropTable": [
        "program (if_statement (parenthesized_expression (binary_expression (deleteData deleteIcebergTable ))block (try_statement (block (if_statement (parenthesized_expression (unary_expression (method_invocation (Catalogs hiveCatalog argument_list (conf catalogProperties ))))block (expression_statement (method_invocation (LOG info argument_list (\"Dropping with purge all the data for table {}.{}\" method_invocation (hmsTable getDbName argument_list )method_invocation (hmsTable getTableName argument_list ))))expression_statement (method_invocation (Catalogs dropTable argument_list (conf catalogProperties ))))block (if_statement (parenthesized_expression (binary_expression (binary_expression (deleteMetadata null )method_invocation (method_invocation (deleteIo newInputFile argument_list (method_invocation (deleteMetadata location argument_list )))exists argument_list )))block (expression_statement (method_invocation (CatalogUtil dropTableData argument_list (deleteIo deleteMetadata ))))))))catch_clause (catch_formal_parameter (catch_type (Exception )e )block (expression_statement (method_invocation (LOG warn argument_list (\"Exception during commitDropTable operation for table {}.{}.\" method_invocation (hmsTable getDbName argument_list )method_invocation (hmsTable getTableName argument_list )e )))))))))"
    ],
    "configureAccumuloOutputFormat": [
        "program (local_variable_declaration (AccumuloConnectionParameters variable_declarator (cnxnParams method_invocation (getConnectionParams argument_list (job ))))local_variable_declaration (modifiers String variable_declarator (tableName method_invocation (job get argument_list (field_access (AccumuloSerDeParameters.TABLE_NAME AccumuloSerDeParameters.TABLE_NAME )))))expression_statement (method_invocation (Preconditions checkNotNull argument_list (tableName \"Expected Accumulo table name to be provided in job configuration\" )))try_statement (block (if_statement (parenthesized_expression (method_invocation (cnxnParams useMockInstance argument_list ))block (expression_statement (method_invocation (method_invocation (getHelper argument_list )setOutputFormatMockInstance argument_list (job method_invocation (cnxnParams getAccumuloInstanceName argument_list )))))block (expression_statement (method_invocation (method_invocation (getHelper argument_list )setOutputFormatZooKeeperInstance argument_list (job method_invocation (cnxnParams getAccumuloInstanceName argument_list )method_invocation (cnxnParams getZooKeepers argument_list )method_invocation (cnxnParams useSasl argument_list ))))))if_statement (parenthesized_expression (method_invocation (cnxnParams useSasl argument_list ))block (expression_statement (method_invocation (method_invocation (getHelper argument_list )updateOutputFormatConfWithAccumuloToken argument_list (job method_invocation (getCurrentUser argument_list )cnxnParams ))))block (expression_statement (method_invocation (method_invocation (getHelper argument_list )setOutputFormatConnectorInfo argument_list (job method_invocation (cnxnParams getAccumuloUserName argument_list )object_creation_expression (PasswordToken argument_list (method_invocation (cnxnParams getAccumuloPassword argument_list ))))))))expression_statement (method_invocation (setDefaultAccumuloTableName argument_list (job tableName )))local_variable_declaration (modifiers String variable_declarator (indexTableName method_invocation (job get argument_list (field_access (AccumuloIndexParameters.INDEXTABLE_NAME AccumuloIndexParameters.INDEXTABLE_NAME )))))local_variable_declaration (modifiers String variable_declarator (indexedColumns method_invocation (job get argument_list (field_access (AccumuloIndexParameters.INDEXED_COLUMNS AccumuloIndexParameters.INDEXED_COLUMNS )))))local_variable_declaration (modifiers String variable_declarator (columnTypes method_invocation (job get argument_list (field_access (serdeConstants.LIST_COLUMN_TYPES serdeConstants.LIST_COLUMN_TYPES )))))local_variable_declaration (modifiers boolean variable_declarator (binaryEncoding method_invocation (method_invocation (field_access (ColumnEncoding.BINARY ColumnEncoding.BINARY )getName argument_list )equalsIgnoreCase argument_list (method_invocation (job get argument_list (field_access (AccumuloSerDeParameters.DEFAULT_STORAGE_TYPE AccumuloSerDeParameters.DEFAULT_STORAGE_TYPE )))))))expression_statement (method_invocation (setAccumuloIndexTableName argument_list (job indexTableName )))expression_statement (method_invocation (setAccumuloIndexColumns argument_list (job indexedColumns )))expression_statement (method_invocation (setAccumuloStringEncoding argument_list (job unary_expression (binaryEncoding )))))catch_clause (catch_formal_parameter (catch_type (AccumuloSecurityException )e )block (expression_statement (method_invocation (log error argument_list (\"Could not connect to Accumulo with provided credentials\" e )))throw_statement (object_creation_expression (IOException argument_list (e )))))))"
    ],
    "configureInputJobProperties": [
        "program (expression_statement (method_invocation (overlayTableProperties argument_list (conf tableDesc map )))expression_statement (method_invocation (fallbackToNonVectorizedModeBasedOnProperties argument_list (method_invocation (tableDesc getProperties argument_list ))))local_variable_declaration (boolean variable_declarator (allowDataFilesWithinTableLocationOnly method_invocation (conf getBoolean argument_list (field_access (field_access (field_access (HiveConf.ConfVars.HIVE_ICEBERG_ALLOW_DATAFILES_IN_TABLE_LOCATION_ONLY.varname HiveConf.ConfVars.HIVE_ICEBERG_ALLOW_DATAFILES_IN_TABLE_LOCATION_ONLY.varname )HiveConf.ConfVars.HIVE_ICEBERG_ALLOW_DATAFILES_IN_TABLE_LOCATION_ONLY.varname )HiveConf.ConfVars.HIVE_ICEBERG_ALLOW_DATAFILES_IN_TABLE_LOCATION_ONLY.varname )field_access (field_access (field_access (HiveConf.ConfVars.HIVE_ICEBERG_ALLOW_DATAFILES_IN_TABLE_LOCATION_ONLY.defaultBoolVal HiveConf.ConfVars.HIVE_ICEBERG_ALLOW_DATAFILES_IN_TABLE_LOCATION_ONLY.defaultBoolVal )HiveConf.ConfVars.HIVE_ICEBERG_ALLOW_DATAFILES_IN_TABLE_LOCATION_ONLY.defaultBoolVal )HiveConf.ConfVars.HIVE_ICEBERG_ALLOW_DATAFILES_IN_TABLE_LOCATION_ONLY.defaultBoolVal )))))expression_statement (method_invocation (map put argument_list (field_access (field_access (field_access (HiveConf.ConfVars.HIVE_ICEBERG_ALLOW_DATAFILES_IN_TABLE_LOCATION_ONLY.varname HiveConf.ConfVars.HIVE_ICEBERG_ALLOW_DATAFILES_IN_TABLE_LOCATION_ONLY.varname )HiveConf.ConfVars.HIVE_ICEBERG_ALLOW_DATAFILES_IN_TABLE_LOCATION_ONLY.varname )HiveConf.ConfVars.HIVE_ICEBERG_ALLOW_DATAFILES_IN_TABLE_LOCATION_ONLY.varname )method_invocation (String valueOf argument_list (allowDataFilesWithinTableLocationOnly ))))))"
    ],
    "configureJobConf": [
        "program (expression_statement (method_invocation (setCommonJobConf argument_list (jobConf )))if_statement (parenthesized_expression (binary_expression (binary_expression (binary_expression (tableDesc null )binary_expression (method_invocation (tableDesc getProperties argument_list )null ))binary_expression (method_invocation (method_invocation (tableDesc getProperties argument_list )get argument_list (binary_expression (field_access (InputFormatConfig.OPERATION_TYPE_PREFIX InputFormatConfig.OPERATION_TYPE_PREFIX )method_invocation (tableDesc getTableName argument_list ))))null )))block (local_variable_declaration (String variable_declarator (tableName method_invocation (tableDesc getTableName argument_list )))local_variable_declaration (String variable_declarator (opKey binary_expression (field_access (InputFormatConfig.OPERATION_TYPE_PREFIX InputFormatConfig.OPERATION_TYPE_PREFIX )tableName )))expression_statement (method_invocation (jobConf set argument_list (opKey method_invocation (method_invocation (tableDesc getProperties argument_list )getProperty argument_list (opKey )))))expression_statement (method_invocation (Preconditions checkArgument argument_list (unary_expression (method_invocation (tableName contains argument_list (TABLE_NAME_SEPARATOR )))binary_expression (binary_expression (binary_expression (binary_expression (\"Can not handle table \" tableName )\". Its name contains '\" )TABLE_NAME_SEPARATOR )\"'\" ))))local_variable_declaration (String variable_declarator (tables method_invocation (jobConf get argument_list (field_access (InputFormatConfig.OUTPUT_TABLES InputFormatConfig.OUTPUT_TABLES )))))expression_statement (assignment_expression (tables ternary_expression (binary_expression (tables null )tableName binary_expression (binary_expression (tables TABLE_NAME_SEPARATOR )tableName ))))expression_statement (method_invocation (jobConf set argument_list (field_access (InputFormatConfig.OUTPUT_TABLES InputFormatConfig.OUTPUT_TABLES )tables )))local_variable_declaration (String variable_declarator (catalogName method_invocation (method_invocation (tableDesc getProperties argument_list )getProperty argument_list (field_access (InputFormatConfig.CATALOG_NAME InputFormatConfig.CATALOG_NAME )))))if_statement (parenthesized_expression (binary_expression (catalogName null ))block (expression_statement (method_invocation (jobConf set argument_list (binary_expression (field_access (InputFormatConfig.TABLE_CATALOG_PREFIX InputFormatConfig.TABLE_CATALOG_PREFIX )tableName )catalogName )))))))try_statement (block (if_statement (parenthesized_expression (unary_expression (method_invocation (jobConf getBoolean argument_list (field_access (field_access (field_access (HiveConf.ConfVars.HIVE_IN_TEST_IDE.varname HiveConf.ConfVars.HIVE_IN_TEST_IDE.varname )HiveConf.ConfVars.HIVE_IN_TEST_IDE.varname )HiveConf.ConfVars.HIVE_IN_TEST_IDE.varname )false ))))block (expression_statement (method_invocation (Utilities addDependencyJars argument_list (jobConf class_literal (HiveIcebergStorageHandler )))))))catch_clause (catch_formal_parameter (catch_type (IOException )e )block (expression_statement (method_invocation (Throwables propagate argument_list (e )))))))"
    ],
    "configureOutputJobProperties": [
        "program (expression_statement (method_invocation (overlayTableProperties argument_list (conf tableDesc map )))expression_statement (method_invocation (fallbackToNonVectorizedModeBasedOnProperties argument_list (method_invocation (tableDesc getProperties argument_list ))))expression_statement (method_invocation (map put argument_list (\"mapred.output.committer.class\" method_invocation (class_literal (HiveIcebergNoJobCommitter )getName argument_list ))))local_variable_declaration (String variable_declarator (opType method_invocation (getOperationType argument_list )))expression_statement (method_invocation (map put argument_list (binary_expression (field_access (InputFormatConfig.OPERATION_TYPE_PREFIX InputFormatConfig.OPERATION_TYPE_PREFIX )method_invocation (tableDesc getTableName argument_list ))opType )))expression_statement (method_invocation (method_invocation (tableDesc getProperties argument_list )put argument_list (binary_expression (field_access (InputFormatConfig.OPERATION_TYPE_PREFIX InputFormatConfig.OPERATION_TYPE_PREFIX )method_invocation (tableDesc getTableName argument_list ))opType ))))"
    ],
    "configure": [
        "program (expression_statement (method_invocation (job setInputFormatClass argument_list (class_literal (IcebergInputFormat ))))return_statement (object_creation_expression (scoped_type_identifier (InputFormatConfig ConfigBuilder )argument_list (method_invocation (job getConfiguration argument_list )))))"
    ],
    "contains": [
        "program (if_statement (parenthesized_expression (binary_expression (interned null ))return_statement (method_invocation (interned contains argument_list (value )))return_statement (method_invocation (super contains argument_list (value )))))"
    ],
    "cOpKeyset": [
        "program (return_statement (method_invocation (compareOps keySet argument_list )))"
    ],
    "createColumnMap": [
        "program (local_variable_declaration (generic_type (Map type_arguments (String String ))variable_declarator (colsMap object_creation_expression (generic_type (HashMap type_arguments (String String ))argument_list )))local_variable_declaration (String variable_declarator (accColString method_invocation (conf get argument_list (field_access (AccumuloSerDeParameters.COLUMN_MAPPINGS AccumuloSerDeParameters.COLUMN_MAPPINGS )))))if_statement (parenthesized_expression (binary_expression (binary_expression (accColString null )unary_expression (method_invocation (method_invocation (accColString trim argument_list )isEmpty argument_list ))))block (local_variable_declaration (array_type (String dimensions )variable_declarator (accCols method_invocation (accColString split argument_list (\",\" ))))local_variable_declaration (array_type (String dimensions )variable_declarator (hiveCols method_invocation (method_invocation (conf get argument_list (field_access (serdeConstants.LIST_COLUMNS serdeConstants.LIST_COLUMNS )))split argument_list (\",\" ))))for_statement (local_variable_declaration (integral_type variable_declarator (i 0 ))binary_expression (i field_access (accCols.length accCols.length ))update_expression (i )block (expression_statement (method_invocation (colsMap put argument_list (array_access (hiveCols i )method_invocation (array_access (accCols i )replace argument_list (':' '_' )))))))))return_statement (colsMap ))"
    ],
    "createIndexDefinition": [
        "program (local_variable_declaration (AccumuloIndexDefinition variable_declarator (def object_creation_expression (AccumuloIndexDefinition argument_list (tname iname ))))local_variable_declaration (String variable_declarator (cols method_invocation (AccumuloIndexedOutputFormat getIndexColumns argument_list (job ))))expression_statement (method_invocation (LOG info argument_list (\"Index Cols = {}\" cols )))expression_statement (method_invocation (def setColumnTuples argument_list (cols )))return_statement (def ))"
    ],
    "createKey": [
        "program (return_statement (null ))"
    ],
    "createLazyField": [
        "program (if_statement (parenthesized_expression (field_access (array_access (columnsMapping fieldID )columnsMapping[fieldID].hbaseRowKey ))block (return_statement (method_invocation (keyFactory createKey argument_list (method_invocation (fieldRef getFieldObjectInspector argument_list ))))))if_statement (parenthesized_expression (field_access (array_access (columnsMapping fieldID )columnsMapping[fieldID].hbaseTimestamp ))block (return_statement (method_invocation (LazyFactory createLazyObject argument_list (method_invocation (fieldRef getFieldObjectInspector argument_list ))))))if_statement (parenthesized_expression (binary_expression (valueFactories null ))block (return_statement (method_invocation (method_invocation (valueFactories get argument_list (fieldID ))createValueObject argument_list (method_invocation (fieldRef getFieldObjectInspector argument_list ))))))return_statement (method_invocation (HBaseSerDeHelper createLazyField argument_list (columnsMapping fieldID method_invocation (fieldRef getFieldObjectInspector argument_list )))))"
    ],
    "createRowIdObjectInspector": [
        "program (return_statement (method_invocation (LazyFactory createLazyObjectInspector argument_list (type array_creation_expression (integral_type dimensions array_initializer (separator ))0 method_invocation (serdeParams getNullSequence argument_list )method_invocation (serdeParams isEscaped argument_list )method_invocation (serdeParams getEscapeChar argument_list )))))"
    ],
    "createRowId": [
        "program (local_variable_declaration (LazyObjectBase variable_declarator (lazyObj method_invocation (LazyFactory createLazyObject argument_list (inspector binary_expression (field_access (ColumnEncoding.BINARY ColumnEncoding.BINARY )method_invocation (rowIdMapping getEncoding argument_list ))))))expression_statement (method_invocation (log info argument_list (binary_expression (binary_expression (binary_expression (\"Created \" method_invocation (lazyObj getClass argument_list ))\" for rowId with inspector \" )method_invocation (inspector getClass argument_list )))))return_statement (lazyObj ))"
    ],
    "createScanner": [
        "program (local_variable_declaration (AccumuloIndexScanner variable_declarator (handler ))local_variable_declaration (String variable_declarator (classname method_invocation (conf get argument_list (INDEX_SCANNER ))))if_statement (parenthesized_expression (binary_expression (classname null ))block (try_statement (block (expression_statement (assignment_expression (handler cast_expression (AccumuloIndexScanner method_invocation (method_invocation (Class forName argument_list (classname ))newInstance argument_list )))))catch_clause (catch_formal_parameter (catch_type (ClassCastException InstantiationException IllegalAccessException ClassNotFoundException )e )block (throw_statement (object_creation_expression (AccumuloIndexScannerException argument_list (binary_expression (\"Cannot use index scanner class: \" classname )e )))))))block (expression_statement (assignment_expression (handler object_creation_expression (AccumuloDefaultIndexScanner argument_list )))))if_statement (parenthesized_expression (binary_expression (handler null ))block (expression_statement (method_invocation (handler init argument_list (conf )))))return_statement (handler ))"
    ],
    "createValue": [
        "program (return_statement (method_invocation (method_invocation (method_invocation (LlapHiveUtils findMapWork argument_list (job ))getVectorizedRowBatchCtx argument_list )createVectorizedRowBatch argument_list )))"
    ],
    "decomposePredicate": [
        "program (local_variable_declaration (DecomposedPredicate variable_declarator (predicate object_creation_expression (DecomposedPredicate argument_list )))expression_statement (assignment_expression (field_access (predicate.residualPredicate predicate.residualPredicate )cast_expression (ExprNodeGenericFuncDesc exprNodeDesc )))local_variable_declaration (ExprNodeDesc variable_declarator (pushedPredicate method_invocation (exprNodeDesc clone argument_list )))local_variable_declaration (generic_type (List type_arguments (ExprNodeDesc ))variable_declarator (subExprNodes method_invocation (pushedPredicate getChildren argument_list )))if_statement (parenthesized_expression (method_invocation (subExprNodes removeIf argument_list (lambda_expression (nodeDesc binary_expression (binary_expression (method_invocation (nodeDesc getCols argument_list )null )method_invocation (method_invocation (nodeDesc getCols argument_list )contains argument_list (method_invocation (field_access (VirtualColumn.FILE_PATH VirtualColumn.FILE_PATH )getName argument_list ))))))))block (if_statement (parenthesized_expression (binary_expression (method_invocation (subExprNodes size argument_list )1 ))block (expression_statement (assignment_expression (pushedPredicate method_invocation (subExprNodes get argument_list (0 )))))if_statement (parenthesized_expression (method_invocation (subExprNodes isEmpty argument_list ))block (expression_statement (assignment_expression (pushedPredicate null )))))))expression_statement (assignment_expression (field_access (predicate.pushedPredicate predicate.pushedPredicate )cast_expression (ExprNodeGenericFuncDesc pushedPredicate )))local_variable_declaration (Expression variable_declarator (filterExpr cast_expression (Expression method_invocation (HiveIcebergInputFormat getFilterExpr argument_list (conf field_access (predicate.pushedPredicate predicate.pushedPredicate ))))))if_statement (parenthesized_expression (binary_expression (filterExpr null ))block (expression_statement (method_invocation (SessionStateUtil addResource argument_list (conf field_access (InputFormatConfig.QUERY_FILTERS InputFormatConfig.QUERY_FILTERS )filterExpr )))))return_statement (predicate ))"
    ],
    "decompose": [
        "program (local_variable_declaration (generic_type (Map type_arguments (String generic_type (List type_arguments (IndexSearchCondition ))))variable_declarator (result object_creation_expression (generic_type (HashMap type_arguments (String generic_type (List type_arguments (IndexSearchCondition ))))argument_list )))enhanced_for_statement (IndexSearchCondition condition searchConditions block (local_variable_declaration (generic_type (List type_arguments (IndexSearchCondition ))variable_declarator (conditions method_invocation (result get argument_list (method_invocation (method_invocation (condition getColumnDesc argument_list )getColumn argument_list )))))if_statement (parenthesized_expression (binary_expression (conditions null ))block (expression_statement (assignment_expression (conditions object_creation_expression (generic_type (ArrayList type_arguments (IndexSearchCondition ))argument_list )))expression_statement (method_invocation (result put argument_list (method_invocation (method_invocation (condition getColumnDesc argument_list )getColumn argument_list )conditions )))))expression_statement (method_invocation (conditions add argument_list (condition )))))return_statement (result ))"
    ],
    "encodeBinaryValue": [
        "program (local_variable_declaration (String variable_declarator (rawType method_invocation (getRawType argument_list (hiveType ))))switch_expression (parenthesized_expression (rawType )switch_block (switch_block_statement_group (switch_label (field_access (serdeConstants.BOOLEAN_TYPE_NAME serdeConstants.BOOLEAN_TYPE_NAME ))return_statement (method_invocation (method_invocation (String valueOf argument_list (binary_expression (array_access (value 0 )1 )))getBytes argument_list )))switch_block_statement_group (switch_label (field_access (serdeConstants.INT_TYPE_NAME serdeConstants.INT_TYPE_NAME ))return_statement (method_invocation (INTEGER_LEXICODER encode argument_list (method_invocation (method_invocation (method_invocation (ByteBuffer wrap argument_list (value ))asIntBuffer argument_list )get argument_list )))))switch_block_statement_group (switch_label (field_access (serdeConstants.SMALLINT_TYPE_NAME serdeConstants.SMALLINT_TYPE_NAME ))return_statement (method_invocation (INTEGER_LEXICODER encode argument_list (cast_expression (integral_type parenthesized_expression (method_invocation (method_invocation (method_invocation (ByteBuffer wrap argument_list (value ))asShortBuffer argument_list )get argument_list )))))))switch_block_statement_group (switch_label (field_access (serdeConstants.TINYINT_TYPE_NAME serdeConstants.TINYINT_TYPE_NAME ))return_statement (method_invocation (INTEGER_LEXICODER encode argument_list (cast_expression (integral_type array_access (value 0 ))))))switch_block_statement_group (switch_label (field_access (serdeConstants.FLOAT_TYPE_NAME serdeConstants.FLOAT_TYPE_NAME ))return_statement (method_invocation (DOUBLE_LEXICODER encode argument_list (cast_expression (floating_point_type method_invocation (method_invocation (method_invocation (ByteBuffer wrap argument_list (value ))asFloatBuffer argument_list )get argument_list ))))))switch_block_statement_group (switch_label (field_access (serdeConstants.DOUBLE_TYPE_NAME serdeConstants.DOUBLE_TYPE_NAME ))return_statement (method_invocation (DOUBLE_LEXICODER encode argument_list (method_invocation (method_invocation (method_invocation (ByteBuffer wrap argument_list (value ))asDoubleBuffer argument_list )get argument_list )))))switch_block_statement_group (switch_label (field_access (serdeConstants.BIGINT_TYPE_NAME serdeConstants.BIGINT_TYPE_NAME ))return_statement (method_invocation (BIG_INTEGER_LEXICODER encode argument_list (object_creation_expression (BigInteger argument_list (value ))))))switch_block_statement_group (switch_label (field_access (serdeConstants.DECIMAL_TYPE_NAME serdeConstants.DECIMAL_TYPE_NAME ))return_statement (method_invocation (object_creation_expression (String argument_list (value ))getBytes argument_list (UTF_8 ))))switch_block_statement_group (switch_label return_statement (value )))))"
    ],
    "encodeStringValue": [
        "program (local_variable_declaration (String variable_declarator (rawType method_invocation (getRawType argument_list (hiveType ))))switch_expression (parenthesized_expression (rawType )switch_block (switch_block_statement_group (switch_label (field_access (serdeConstants.BOOLEAN_TYPE_NAME serdeConstants.BOOLEAN_TYPE_NAME ))return_statement (method_invocation (method_invocation (method_invocation (Boolean valueOf argument_list (object_creation_expression (String argument_list (value ))))toString argument_list )getBytes argument_list (UTF_8 ))))switch_block_statement_group (switch_label (field_access (serdeConstants.SMALLINT_TYPE_NAME serdeConstants.SMALLINT_TYPE_NAME )))switch_block_statement_group (switch_label (field_access (serdeConstants.TINYINT_TYPE_NAME serdeConstants.TINYINT_TYPE_NAME )))switch_block_statement_group (switch_label (field_access (serdeConstants.INT_TYPE_NAME serdeConstants.INT_TYPE_NAME ))return_statement (method_invocation (INTEGER_LEXICODER encode argument_list (method_invocation (Integer valueOf argument_list (object_creation_expression (String argument_list (value ))))))))switch_block_statement_group (switch_label (field_access (serdeConstants.FLOAT_TYPE_NAME serdeConstants.FLOAT_TYPE_NAME )))switch_block_statement_group (switch_label (field_access (serdeConstants.DOUBLE_TYPE_NAME serdeConstants.DOUBLE_TYPE_NAME ))return_statement (method_invocation (DOUBLE_LEXICODER encode argument_list (method_invocation (Double valueOf argument_list (object_creation_expression (String argument_list (value ))))))))switch_block_statement_group (switch_label (field_access (serdeConstants.BIGINT_TYPE_NAME serdeConstants.BIGINT_TYPE_NAME ))return_statement (method_invocation (BIG_INTEGER_LEXICODER encode argument_list (object_creation_expression (BigInteger argument_list (object_creation_expression (String argument_list (value ))10 ))))))switch_block_statement_group (switch_label (field_access (serdeConstants.DECIMAL_TYPE_NAME serdeConstants.DECIMAL_TYPE_NAME ))return_statement (method_invocation (object_creation_expression (String argument_list (value ))getBytes argument_list (UTF_8 ))))switch_block_statement_group (switch_label return_statement (value )))))"
    ],
    "encodeValue": [
        "program (if_statement (parenthesized_expression (stringEncoded )block (return_statement (method_invocation (encodeStringValue argument_list (value hiveType ))))block (return_statement (method_invocation (encodeBinaryValue argument_list (value hiveType ))))))"
    ],
    "encode": [
        "program (try_statement (block (return_statement (method_invocation (URLEncoder encode argument_list (key method_invocation (field_access (StandardCharsets.UTF_8 StandardCharsets.UTF_8 )name argument_list )))))catch_clause (catch_formal_parameter (catch_type (UnsupportedEncodingException )e )block (return_statement (key )))))"
    ],
    "equals": [
        "program (if_statement (parenthesized_expression (binary_expression (this o ))block (return_statement (true )))if_statement (parenthesized_expression (binary_expression (binary_expression (o null )binary_expression (method_invocation (getClass argument_list )method_invocation (o getClass argument_list ))))block (return_statement (false )))local_variable_declaration (TaskAttemptWrapper variable_declarator (that cast_expression (TaskAttemptWrapper o )))return_statement (binary_expression (binary_expression (binary_expression (method_invocation (getId argument_list )method_invocation (that getId argument_list ))binary_expression (method_invocation (method_invocation (getTaskID argument_list )getId argument_list )method_invocation (method_invocation (that getTaskID argument_list )getId argument_list )))method_invocation (Objects equals argument_list (method_invocation (getJobID argument_list )method_invocation (that getJobID argument_list ))))))"
    ],
    "fetchColumns": [
        "program (expression_statement (method_invocation (AccumuloInputFormat fetchColumns argument_list (conf cfCqPairs ))))"
    ],
    "filter": [
        "program (local_variable_declaration (Database variable_declarator (db object_creation_expression (Database argument_list (\"f1\" \"no description\" testTempDir emptyParameters ))))expression_statement (method_invocation (msClient createDatabase argument_list (db )))expression_statement (assignment_expression (db object_creation_expression (Database argument_list (\"f2\" \"no description\" testTempDir emptyParameters ))))expression_statement (method_invocation (msClient createDatabase argument_list (db )))expression_statement (method_invocation (msClient dropDatabase argument_list (\"f2\" )))local_variable_declaration (scoped_type_identifier (IMetaStoreClient NotificationFilter )variable_declarator (filter object_creation_expression (scoped_type_identifier (IMetaStoreClient NotificationFilter )argument_list class_body (method_declaration (modifiers (marker_annotation (Override ))boolean accept formal_parameters (formal_parameter (NotificationEvent event ))block (return_statement (method_invocation (method_invocation (event getEventType argument_list )equals argument_list (method_invocation (field_access (EventType.DROP_DATABASE EventType.DROP_DATABASE )toString argument_list ))))))))))local_variable_declaration (NotificationEventResponse variable_declarator (rsp method_invocation (msClient getNextNotification argument_list (firstEventId 0 filter ))))expression_statement (method_invocation (assertEquals argument_list (1 method_invocation (rsp getEventsSize argument_list ))))expression_statement (method_invocation (assertEquals argument_list (binary_expression (firstEventId 3 )method_invocation (method_invocation (method_invocation (rsp getEvents argument_list )get argument_list (0 ))getEventId argument_list )))))"
    ],
    "fromCode": [
        "program (if_statement (parenthesized_expression (unary_expression (method_invocation (CODE_CACHE containsKey argument_list (code ))))block (throw_statement (object_creation_expression (IllegalArgumentException argument_list (binary_expression (\"No ColumnEncoding defined with code \" code ))))))return_statement (method_invocation (CODE_CACHE get argument_list (code ))))"
    ],
    "fromName": [
        "program (if_statement (parenthesized_expression (unary_expression (method_invocation (NAME_CACHE containsKey argument_list (name ))))block (throw_statement (object_creation_expression (IllegalArgumentException argument_list (binary_expression (\"No ColumnEncoding defined with name \" name ))))))return_statement (method_invocation (NAME_CACHE get argument_list (name ))))"
    ],
    "generateRanges": [
        "program (local_variable_declaration (AccumuloRangeGenerator variable_declarator (rangeGenerator object_creation_expression (AccumuloRangeGenerator argument_list (conf handler method_invocation (columnMapper getRowIdMapping argument_list )hiveRowIdColumnName ))))local_variable_declaration (SemanticDispatcher variable_declarator (disp object_creation_expression (DefaultRuleDispatcher argument_list (rangeGenerator method_invocation (Collections type_arguments (SemanticRule SemanticNodeProcessor )emptyMap argument_list )null ))))local_variable_declaration (SemanticGraphWalker variable_declarator (ogw object_creation_expression (DefaultGraphWalker argument_list (disp ))))local_variable_declaration (generic_type (List type_arguments (Node ))variable_declarator (roots object_creation_expression (generic_type (ArrayList type_arguments (Node ))argument_list )))expression_statement (method_invocation (roots add argument_list (root )))local_variable_declaration (generic_type (HashMap type_arguments (Node Object ))variable_declarator (nodeOutput object_creation_expression (generic_type (HashMap type_arguments (Node Object ))argument_list )))try_statement (block (expression_statement (method_invocation (ogw startWalking argument_list (roots nodeOutput ))))catch_clause (catch_formal_parameter (catch_type (SemanticException )ex )block (throw_statement (object_creation_expression (RuntimeException argument_list (ex ))))))return_statement (method_invocation (nodeOutput get argument_list (root ))))"
    ],
    "getAccumuloInstanceName": [
        "program (expression_statement (method_invocation (Preconditions checkNotNull argument_list (conf )))return_statement (method_invocation (conf get argument_list (INSTANCE_NAME ))))"
    ],
    "getAccumuloKeytab": [
        "program (expression_statement (method_invocation (Preconditions checkNotNull argument_list (conf )))return_statement (method_invocation (conf get argument_list (USER_KEYTAB ))))"
    ],
    "getAccumuloPassword": [
        "program (expression_statement (method_invocation (Preconditions checkNotNull argument_list (conf )))return_statement (method_invocation (conf get argument_list (USER_PASS ))))"
    ],
    "getAccumuloTableName": [
        "program (expression_statement (method_invocation (Preconditions checkNotNull argument_list (conf )))return_statement (method_invocation (conf get argument_list (TABLE_NAME ))))"
    ],
    "getAccumuloToken": [
        "program (expression_statement (method_invocation (checkNotNull argument_list (user \"Provided UGI was null\" )))local_variable_declaration (generic_type (Collection type_arguments (generic_type (Token type_arguments (wildcard (TokenIdentifier )))))variable_declarator (tokens method_invocation (user getTokens argument_list )))enhanced_for_statement (generic_type (Token type_arguments (wildcard ))token tokens block (if_statement (parenthesized_expression (method_invocation (ACCUMULO_SERVICE equals argument_list (method_invocation (token getKind argument_list ))))block (return_statement (token )))))return_statement (null ))"
    ],
    "getAccumuloUserName": [
        "program (expression_statement (method_invocation (Preconditions checkNotNull argument_list (conf )))return_statement (method_invocation (conf get argument_list (USER_NAME ))))"
    ],
    "getAuthorizationProvider": [
        "program (return_statement (method_invocation (class_literal (DefaultHiveMetastoreAuthorizationProvider )getName argument_list )))"
    ],
    "getAuths": [
        "program (local_variable_declaration (Configuration variable_declarator (conf object_creation_expression (Configuration argument_list )))expression_statement (method_invocation (conf set argument_list (field_access (AccumuloSerDeParameters.AUTHORIZATIONS_KEY AccumuloSerDeParameters.AUTHORIZATIONS_KEY )\"public,open\" )))local_variable_declaration (Authorizations variable_declarator (auths method_invocation (object_creation_expression (AccumuloIndexParameters argument_list (conf ))getTableAuths argument_list )))expression_statement (method_invocation (assertEquals argument_list (2 method_invocation (auths size argument_list ))))expression_statement (method_invocation (assertTrue argument_list (\"Missing auth public\" method_invocation (auths contains argument_list (\"public\" )))))expression_statement (method_invocation (assertTrue argument_list (\"Missing auth open\" method_invocation (auths contains argument_list (\"open\" ))))))"
    ],
    "getBaseTable": [
        "program (return_statement (baseTable ))"
    ],
    "getBinaryValue": [
        "program (local_variable_declaration (ByteArrayOutputStream variable_declarator (out object_creation_expression (ByteArrayOutputStream argument_list )))if_statement (parenthesized_expression (instanceof_expression (objInspector PrimitiveObjectInspector ))block (expression_statement (method_invocation (LazyUtils writePrimitive argument_list (out method_invocation (objInspector getWritableConstantValue argument_list )cast_expression (PrimitiveObjectInspector objInspector )))))block (return_statement (method_invocation (getUtf8Value argument_list (objInspector )))))expression_statement (method_invocation (out close argument_list ))return_statement (object_creation_expression (Text argument_list (method_invocation (out toByteArray argument_list )))))"
    ],
    "getCf": [
        "program (return_statement (cf ))"
    ],
    "getClientConfiguration": [
        "program (return_statement (method_invocation (method_invocation (method_invocation (method_invocation (ClientConfiguration loadDefault argument_list )withInstance argument_list (instanceName ))withZkHosts argument_list (zookeepers ))withSasl argument_list (useSasl ))))"
    ],
    "getCode": [
        "program (return_statement (code ))"
    ],
    "getColType": [
        "program (return_statement (method_invocation (colMap get argument_list (method_invocation (encode argument_list (cf cq ))))))"
    ],
    "getColumnEncoding": [
        "program (local_variable_declaration (integral_type variable_declarator (offset method_invocation (columnMapping lastIndexOf argument_list (field_access (AccumuloHiveConstants.POUND AccumuloHiveConstants.POUND )))))if_statement (parenthesized_expression (binary_expression (binary_expression (0 offset )binary_expression (field_access (AccumuloHiveConstants.ESCAPE AccumuloHiveConstants.ESCAPE )method_invocation (columnMapping charAt argument_list (binary_expression (offset 1 ))))))block (throw_statement (object_creation_expression (IllegalArgumentException argument_list (binary_expression (\"Column mapping did not contain a column encoding: \" columnMapping ))))))return_statement (method_invocation (columnMapping substring argument_list (binary_expression (offset 1 )))))"
    ],
    "getColumnFamilyBytes": [
        "program (if_statement (parenthesized_expression (binary_expression (null columnFamilyBytes ))block (expression_statement (assignment_expression (columnFamilyBytes method_invocation (columnFamily getBytes argument_list (field_access (Charsets.UTF_8 Charsets.UTF_8 )))))))return_statement (columnFamilyBytes ))"
    ],
    "getColumnFamily": [
        "program (return_statement (columnFamily ))"
    ],
    "getColumnMapper": [
        "program (return_statement (columnMapper ))"
    ],
    "getColumnMappingForHiveColumn": [
        "program (local_variable_declaration (generic_type (List type_arguments (String ))variable_declarator (hiveColumnNames method_invocation (lazySerDeParameters getColumnNames argument_list )))for_statement (local_variable_declaration (integral_type variable_declarator (offset 0 ))binary_expression (binary_expression (offset method_invocation (hiveColumnNames size argument_list ))binary_expression (offset method_invocation (columnMapper size argument_list )))update_expression (offset )block (local_variable_declaration (String variable_declarator (hiveColumnName method_invocation (hiveColumnNames get argument_list (offset ))))if_statement (parenthesized_expression (method_invocation (hiveColumn equals argument_list (hiveColumnName )))block (return_statement (method_invocation (columnMapper get argument_list (offset )))))))throw_statement (object_creation_expression (NoSuchElementException argument_list (binary_expression (\"Could not find column mapping for Hive column \" hiveColumn )))))"
    ],
    "getColumnMappings": [
        "program (return_statement (columnMappings ))"
    ],
    "getColumnMap": [
        "program (return_statement (colMap ))"
    ],
    "getColumnName": [
        "program (return_statement (columnName ))"
    ],
    "getColumnOpConstantRange": [
        "program (if_statement (parenthesized_expression (method_invocation (opClz equals argument_list (class_literal (Equal ))))block (return_statement (object_creation_expression (Range argument_list (constText ))))if_statement (parenthesized_expression (method_invocation (opClz equals argument_list (class_literal (GreaterThanOrEqual ))))block (return_statement (object_creation_expression (Range argument_list (constText null ))))if_statement (parenthesized_expression (method_invocation (opClz equals argument_list (class_literal (GreaterThan ))))block (return_statement (object_creation_expression (Range argument_list (constText false null false ))))if_statement (parenthesized_expression (method_invocation (opClz equals argument_list (class_literal (LessThanOrEqual ))))block (return_statement (object_creation_expression (Range argument_list (null false constText true ))))if_statement (parenthesized_expression (method_invocation (opClz equals argument_list (class_literal (LessThan ))))block (return_statement (object_creation_expression (Range argument_list (null false constText false ))))block (throw_statement (object_creation_expression (IllegalArgumentException argument_list (binary_expression (\"Could not process \" opClz )))))))))))"
    ],
    "getColumnQualifierBytes": [
        "program (if_statement (parenthesized_expression (binary_expression (null columnQualifierBytes ))block (expression_statement (assignment_expression (columnQualifierBytes method_invocation (columnQualifier getBytes argument_list (field_access (Charsets.UTF_8 Charsets.UTF_8 )))))))return_statement (columnQualifierBytes ))"
    ],
    "getColumnQualifierPrefix": [
        "program (return_statement (columnQualifierPrefix ))"
    ],
    "getColumnQualifier": [
        "program (return_statement (field_access (this.columnQualifier this.columnQualifier )))"
    ],
    "getColumnTypes": [
        "program (return_statement (method_invocation (serdeParams getColumnTypes argument_list )))"
    ],
    "getColumnType": [
        "program (return_statement (columnType ))"
    ],
    "getCompareOpClass": [
        "program (if_statement (parenthesized_expression (unary_expression (method_invocation (compareOps containsKey argument_list (udfType ))))block (throw_statement (object_creation_expression (NoSuchCompareOpException argument_list (binary_expression (\"Null compare op for specified key: \" udfType ))))))return_statement (method_invocation (compareOps get argument_list (udfType ))))"
    ],
    "getCompareOp": [
        "program (local_variable_declaration (generic_type (Class type_arguments (wildcard (CompareOp )))variable_declarator (clz method_invocation (getCompareOpClass argument_list (udfType ))))try_statement (block (return_statement (method_invocation (clz newInstance argument_list )))catch_clause (catch_formal_parameter (catch_type (ClassCastException )e )block (throw_statement (object_creation_expression (SerDeException argument_list (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (\"Column type mismatch in WHERE clause \" method_invocation (method_invocation (sc getIndexExpr argument_list )getExprString argument_list ))\" found type \" )method_invocation (method_invocation (sc getConstantDesc argument_list )getTypeString argument_list ))\" instead of \" )method_invocation (method_invocation (sc getColumnDesc argument_list )getTypeString argument_list )))))))catch_clause (catch_formal_parameter (catch_type (IllegalAccessException )e )block (throw_statement (object_creation_expression (SerDeException argument_list (\"Could not instantiate class for WHERE clause\" e )))))catch_clause (catch_formal_parameter (catch_type (InstantiationException )e )block (throw_statement (object_creation_expression (SerDeException argument_list (\"Could not instantiate class for WHERE clause\" e )))))))"
    ],
    "getConf": [
        "program (return_statement (hiveConf ))"
    ],
    "getConnectionParams": [
        "program (return_statement (object_creation_expression (AccumuloConnectionParameters argument_list (conf ))))"
    ],
    "getConnector": [
        "program (return_statement (connector ))"
    ],
    "getConnectParams": [
        "program (return_statement (connectParams ))"
    ],
    "getConnect": [
        "program (return_statement (connect ))"
    ],
    "getConstantAsBytes": [
        "program (if_statement (parenthesized_expression (instanceof_expression (pCompare StringCompare ))block (return_statement (method_invocation (method_invocation (writable toString argument_list )getBytes argument_list )))if_statement (parenthesized_expression (instanceof_expression (pCompare DoubleCompare ))block (local_variable_declaration (array_type (integral_type dimensions )variable_declarator (bts array_creation_expression (integral_type dimensions_expr (8 ))))local_variable_declaration (floating_point_type variable_declarator (val method_invocation (parenthesized_expression (cast_expression (DoubleWritable writable ))get argument_list )))expression_statement (method_invocation (method_invocation (ByteBuffer wrap argument_list (bts ))putDouble argument_list (val )))return_statement (bts ))if_statement (parenthesized_expression (instanceof_expression (pCompare IntCompare ))block (local_variable_declaration (array_type (integral_type dimensions )variable_declarator (bts array_creation_expression (integral_type dimensions_expr (4 ))))local_variable_declaration (integral_type variable_declarator (val method_invocation (parenthesized_expression (cast_expression (IntWritable writable ))get argument_list )))expression_statement (method_invocation (method_invocation (ByteBuffer wrap argument_list (bts ))putInt argument_list (val )))return_statement (bts ))if_statement (parenthesized_expression (instanceof_expression (pCompare LongCompare ))block (local_variable_declaration (array_type (integral_type dimensions )variable_declarator (bts array_creation_expression (integral_type dimensions_expr (8 ))))local_variable_declaration (integral_type variable_declarator (val method_invocation (parenthesized_expression (cast_expression (LongWritable writable ))get argument_list )))expression_statement (method_invocation (method_invocation (ByteBuffer wrap argument_list (bts ))putLong argument_list (val )))return_statement (bts ))block (throw_statement (object_creation_expression (SerDeException argument_list (binary_expression (\"Unsupported primitive category: \" method_invocation (method_invocation (pCompare getClass argument_list )getName argument_list )))))))))))"
    ],
    "getConstantOpColumnRange": [
        "program (if_statement (parenthesized_expression (method_invocation (opClz equals argument_list (class_literal (Equal ))))block (return_statement (object_creation_expression (Range argument_list (constText ))))if_statement (parenthesized_expression (method_invocation (opClz equals argument_list (class_literal (GreaterThanOrEqual ))))block (return_statement (object_creation_expression (Range argument_list (null constText ))))if_statement (parenthesized_expression (method_invocation (opClz equals argument_list (class_literal (GreaterThan ))))block (return_statement (object_creation_expression (Range argument_list (null false constText false ))))if_statement (parenthesized_expression (method_invocation (opClz equals argument_list (class_literal (LessThanOrEqual ))))block (return_statement (object_creation_expression (Range argument_list (constText true null false ))))if_statement (parenthesized_expression (method_invocation (opClz equals argument_list (class_literal (LessThan ))))block (return_statement (object_creation_expression (Range argument_list (constText false null false ))))block (throw_statement (object_creation_expression (IllegalArgumentException argument_list (binary_expression (\"Could not process \" opClz )))))))))))"
    ],
    "getConstantText": [
        "program (local_variable_declaration (Text variable_declarator (constText ))switch_expression (parenthesized_expression (method_invocation (rowIdMapping getEncoding argument_list ))switch_block (switch_block_statement_group (switch_label (STRING )expression_statement (assignment_expression (constText method_invocation (getUtf8Value argument_list (objInspector ))))break_statement )switch_block_statement_group (switch_label (BINARY )try_statement (block (expression_statement (assignment_expression (constText method_invocation (getBinaryValue argument_list (objInspector )))))catch_clause (catch_formal_parameter (catch_type (IOException )e )block (throw_statement (object_creation_expression (SemanticException argument_list (e ))))))break_statement )switch_block_statement_group (switch_label throw_statement (object_creation_expression (SemanticException argument_list (binary_expression (\"Unable to parse unknown encoding: \" method_invocation (rowIdMapping getEncoding argument_list ))))))))return_statement (constText ))"
    ],
    "getConstant": [
        "program (local_variable_declaration (String variable_declarator (b64Const method_invocation (options get argument_list (CONST_VAL ))))return_statement (method_invocation (method_invocation (Base64 getDecoder argument_list )decode argument_list (method_invocation (b64Const getBytes argument_list )))))"
    ],
    "getConstVal": [
        "program (return_statement (constVal ))"
    ],
    "getcOpt": [
        "program (return_statement (cOpt ))"
    ],
    "getCq": [
        "program (return_statement (cq ))"
    ],
    "getCurrentUser": [
        "program (return_statement (method_invocation (UserGroupInformation getCurrentUser argument_list )))"
    ],
    "getDefault": [
        "program (return_statement (STRING ))"
    ],
    "getDelegationToken": [
        "program (return_statement (method_invocation (tokenCache get argument_list (jobId ))))"
    ],
    "getEncoding": [
        "program (return_statement (encoding ))"
    ],
    "getExpression": [
        "program (local_variable_declaration (String variable_declarator (filteredExprSerialized method_invocation (conf get argument_list (field_access (TableScanDesc.FILTER_EXPR_CONF_STR TableScanDesc.FILTER_EXPR_CONF_STR )))))if_statement (parenthesized_expression (binary_expression (filteredExprSerialized null ))block (return_statement (null )))return_statement (method_invocation (SerializationUtilities deserializeExpression argument_list (filteredExprSerialized ))))"
    ],
    "getField": [
        "program (if_statement (parenthesized_expression (binary_expression (o null ))block (return_statement (null )))return_statement (method_invocation (parenthesized_expression (cast_expression (UnionObject o ))getObject argument_list )))"
    ],
    "getFromMapping": [
        "program (expression_statement (method_invocation (Preconditions checkNotNull argument_list (columnMapping )))local_variable_declaration (String variable_declarator (encoding method_invocation (getColumnEncoding argument_list (columnMapping ))))return_statement (method_invocation (get argument_list (encoding ))))"
    ],
    "getHadoopToken": [
        "program (if_statement (parenthesized_expression (unary_expression (parenthesized_expression (instanceof_expression (token DelegationTokenImpl ))))block (throw_statement (object_creation_expression (IOException argument_list (binary_expression (\"Expected a DelegationTokenImpl but found \" parenthesized_expression (ternary_expression (binary_expression (token null )method_invocation (token getClass argument_list )\"null\" ))))))))local_variable_declaration (DelegationTokenImpl variable_declarator (dt cast_expression (DelegationTokenImpl token )))try_statement (block (local_variable_declaration (AuthenticationTokenIdentifier variable_declarator (identifier method_invocation (dt getIdentifier argument_list )))return_statement (object_creation_expression (generic_type (Token type_arguments (AuthenticationTokenIdentifier ))argument_list (method_invocation (identifier getBytes argument_list )method_invocation (dt getPassword argument_list )method_invocation (identifier getKind argument_list )method_invocation (dt getServiceName argument_list )))))catch_clause (catch_formal_parameter (catch_type (Exception )e )block (throw_statement (object_creation_expression (IOException argument_list (\"Failed to create Hadoop token from Accumulo DelegationToken\" e )))))))"
    ],
    "getHelper": [
        "program (return_statement (helper ))"
    ],
    "getIndexColumns": [
        "program (local_variable_declaration (Configuration variable_declarator (conf object_creation_expression (Configuration argument_list )))expression_statement (method_invocation (conf set argument_list (field_access (AccumuloIndexParameters.INDEXED_COLUMNS AccumuloIndexParameters.INDEXED_COLUMNS )\"a,b,c\" )))local_variable_declaration (generic_type (Set type_arguments (String ))variable_declarator (cols method_invocation (object_creation_expression (AccumuloIndexParameters argument_list (conf ))getIndexColumns argument_list )))expression_statement (method_invocation (assertEquals argument_list (3 method_invocation (cols size argument_list ))))expression_statement (method_invocation (assertTrue argument_list (\"Missing column a\" method_invocation (cols contains argument_list (\"a\" )))))expression_statement (method_invocation (assertTrue argument_list (\"Missing column b\" method_invocation (cols contains argument_list (\"b\" )))))expression_statement (method_invocation (assertTrue argument_list (\"Missing column c\" method_invocation (cols contains argument_list (\"c\" ))))))"
    ],
    "getIndexedColFamQuals": [
        "program (local_variable_declaration (StringBuilder variable_declarator (sb object_creation_expression (StringBuilder argument_list )))local_variable_declaration (String variable_declarator (cols indexColumns ))local_variable_declaration (String variable_declarator (hiveColString method_invocation (method_invocation (tableDesc getProperties argument_list )getProperty argument_list (field_access (serdeConstants.LIST_COLUMNS serdeConstants.LIST_COLUMNS )))))if_statement (parenthesized_expression (binary_expression (binary_expression (binary_expression (cols null )method_invocation (cols isEmpty argument_list ))method_invocation (\"*\" equals argument_list (indexColumns ))))block (expression_statement (assignment_expression (cols method_invocation (hiveColString substring argument_list (binary_expression (method_invocation (hiveColString indexOf argument_list (',' ))1 )))))))local_variable_declaration (array_type (String dimensions )variable_declarator (hiveTypes method_invocation (method_invocation (method_invocation (tableDesc getProperties argument_list )getProperty argument_list (field_access (serdeConstants.LIST_COLUMN_TYPES serdeConstants.LIST_COLUMN_TYPES )))split argument_list (\":\" ))))local_variable_declaration (array_type (String dimensions )variable_declarator (accCols method_invocation (colMap split argument_list (\",\" ))))local_variable_declaration (array_type (String dimensions )variable_declarator (hiveCols method_invocation (hiveColString split argument_list (\",\" ))))local_variable_declaration (generic_type (Set type_arguments (String ))variable_declarator (indexSet object_creation_expression (generic_type (HashSet type_arguments (String ))argument_list )))enhanced_for_statement (String idx method_invocation (cols split argument_list (\",\" ))block (expression_statement (method_invocation (indexSet add argument_list (method_invocation (idx trim argument_list ))))))for_statement (local_variable_declaration (integral_type variable_declarator (i 0 ))binary_expression (i field_access (hiveCols.length hiveCols.length ))update_expression (i )block (if_statement (parenthesized_expression (method_invocation (indexSet contains argument_list (method_invocation (array_access (hiveCols i )trim argument_list ))))block (if_statement (parenthesized_expression (binary_expression (method_invocation (sb length argument_list )0 ))block (expression_statement (method_invocation (sb append argument_list (\",\" )))))expression_statement (method_invocation (sb append argument_list (binary_expression (binary_expression (method_invocation (array_access (accCols i )trim argument_list )\":\" )method_invocation (AccumuloIndexLexicoder getRawType argument_list (array_access (hiveTypes i )))))))))))return_statement (method_invocation (sb toString argument_list )))"
    ],
    "getIndexedRowIds": [
        "program (local_variable_declaration (Text variable_declarator (constText method_invocation (getConstantText argument_list (objInspector ))))local_variable_declaration (array_type (integral_type dimensions )variable_declarator (value method_invocation (method_invocation (constText toString argument_list )getBytes argument_list (UTF_8 ))))local_variable_declaration (array_type (integral_type dimensions )variable_declarator (encoded method_invocation (AccumuloIndexLexicoder encodeValue argument_list (value method_invocation (leftHandNode getTypeString argument_list )true ))))local_variable_declaration (Range variable_declarator (range method_invocation (getRange argument_list (genericUdf leftHandNode object_creation_expression (Text argument_list (encoded ))))))if_statement (parenthesized_expression (binary_expression (indexScanner null ))block (return_statement (method_invocation (indexScanner getIndexRowRanges argument_list (columnName range )))))return_statement (null ))"
    ],
    "getIndexMutations": [
        "program (local_variable_declaration (List variable_declarator (indexMuts object_creation_expression (generic_type (ArrayList type_arguments (Mutation ))argument_list )))if_statement (parenthesized_expression (binary_expression (null indexDef ))block (local_variable_declaration (array_type (integral_type dimensions )variable_declarator (rowId method_invocation (baseMut getRow argument_list )))enhanced_for_statement (ColumnUpdate cu method_invocation (baseMut getUpdates argument_list )block (local_variable_declaration (String variable_declarator (cf object_creation_expression (String argument_list (method_invocation (cu getColumnFamily argument_list )))))local_variable_declaration (String variable_declarator (cq object_creation_expression (String argument_list (method_invocation (cu getColumnQualifier argument_list )))))local_variable_declaration (String variable_declarator (colType method_invocation (indexDef getColType argument_list (cf cq ))))if_statement (parenthesized_expression (binary_expression (colType null ))block (expression_statement (method_invocation (LOG trace argument_list (\"Building index for column {}:{}\" cf cq )))local_variable_declaration (Mutation variable_declarator (m object_creation_expression (Mutation argument_list (method_invocation (AccumuloIndexLexicoder encodeValue argument_list (method_invocation (cu getValue argument_list )colType isStringEncoded ))))))local_variable_declaration (String variable_declarator (colFam binary_expression (binary_expression (cf \"_\" )cq )))expression_statement (method_invocation (m put argument_list (method_invocation (colFam getBytes argument_list )rowId object_creation_expression (ColumnVisibility argument_list (method_invocation (cu getColumnVisibility argument_list )))EMPTY_BYTES )))expression_statement (method_invocation (indexMuts add argument_list (m )))))))))return_statement (indexMuts ))"
    ],
    "getIndexParams": [
        "program (return_statement (indexParams ))"
    ],
    "getIndexScanner": [
        "program (return_statement (indexScanner ))"
    ],
    "getIndexTableName": [
        "program (return_statement (method_invocation (conf get argument_list (method_invocation (enumToConfKey argument_list (implementingClass field_access (WriteOpts.INDEX_TABLE_NAME WriteOpts.INDEX_TABLE_NAME )))))))"
    ],
    "getIndexTable": [
        "program (return_statement (method_invocation (field_access (this.conf this.conf )get argument_list (INDEXTABLE_NAME ))))"
    ],
    "getInputFormatClass": [
        "program (return_statement (class_literal (HiveIcebergInputFormat )))"
    ],
    "getInstance": [
        "program (if_statement (parenthesized_expression (binary_expression (instance null ))block (expression_statement (method_invocation (LOG info argument_list (\"UnitTestConcurrency: Instantiating the Phaser barrier\" )))expression_statement (assignment_expression (instance object_creation_expression (TestUtilPhaser argument_list )))))return_statement (instance ))"
    ],
    "getIterators": [
        "program (local_variable_declaration (generic_type (List type_arguments (IteratorSetting ))variable_declarator (itrs method_invocation (Lists newArrayList argument_list )))local_variable_declaration (boolean variable_declarator (shouldPushdown method_invocation (conf getBoolean argument_list (field_access (AccumuloSerDeParameters.ITERATOR_PUSHDOWN_KEY AccumuloSerDeParameters.ITERATOR_PUSHDOWN_KEY )field_access (AccumuloSerDeParameters.ITERATOR_PUSHDOWN_DEFAULT AccumuloSerDeParameters.ITERATOR_PUSHDOWN_DEFAULT )))))if_statement (parenthesized_expression (unary_expression (shouldPushdown ))block (expression_statement (method_invocation (LOG info argument_list (\"Iterator pushdown is disabled for this table\" )))return_statement (itrs )))local_variable_declaration (boolean variable_declarator (binaryEncodedRow method_invocation (method_invocation (field_access (ColumnEncoding.BINARY ColumnEncoding.BINARY )getName argument_list )equalsIgnoreCase argument_list (method_invocation (conf get argument_list (field_access (AccumuloSerDeParameters.DEFAULT_STORAGE_TYPE AccumuloSerDeParameters.DEFAULT_STORAGE_TYPE )))))))local_variable_declaration (integral_type variable_declarator (rowIdOffset method_invocation (columnMapper getRowIdOffset argument_list )))local_variable_declaration (array_type (String dimensions )variable_declarator (hiveColumnNamesArr method_invocation (conf getStrings argument_list (field_access (serdeConstants.LIST_COLUMNS serdeConstants.LIST_COLUMNS )))))if_statement (parenthesized_expression (binary_expression (null hiveColumnNamesArr ))block (throw_statement (object_creation_expression (IllegalArgumentException argument_list (\"Could not find Hive columns in configuration\" )))))local_variable_declaration (String variable_declarator (hiveRowIdColumnName null ))if_statement (parenthesized_expression (binary_expression (binary_expression (rowIdOffset 0 )binary_expression (rowIdOffset field_access (hiveColumnNamesArr.length hiveColumnNamesArr.length ))))block (expression_statement (assignment_expression (hiveRowIdColumnName array_access (hiveColumnNamesArr rowIdOffset )))))local_variable_declaration (generic_type (List type_arguments (String ))variable_declarator (hiveColumnNames method_invocation (Arrays asList argument_list (hiveColumnNamesArr ))))enhanced_for_statement (IndexSearchCondition sc method_invocation (getSearchConditions argument_list (conf ))block (local_variable_declaration (String variable_declarator (col method_invocation (method_invocation (sc getColumnDesc argument_list )getColumn argument_list )))if_statement (parenthesized_expression (binary_expression (binary_expression (hiveRowIdColumnName null )unary_expression (method_invocation (hiveRowIdColumnName equals argument_list (col )))))block (local_variable_declaration (HiveAccumuloColumnMapping variable_declarator (mapping cast_expression (HiveAccumuloColumnMapping method_invocation (columnMapper getColumnMappingForHiveColumn argument_list (hiveColumnNames col )))))expression_statement (method_invocation (itrs add argument_list (method_invocation (toSetting argument_list (mapping sc binaryEncodedRow )))))))))expression_statement (method_invocation (LOG info argument_list (binary_expression (\"num iterators = \" method_invocation (itrs size argument_list )))))return_statement (itrs ))"
    ],
    "getKerberosToken": [
        "program (try_statement (block (return_statement (object_creation_expression (KerberosToken argument_list (username object_creation_expression (File argument_list (keytab ))true ))))catch_clause (catch_formal_parameter (catch_type (IOException )e )block (throw_statement (object_creation_expression (IllegalArgumentException argument_list (\"Failed to instantiate KerberosToken.\" e )))))))"
    ],
    "getKeyEncoding": [
        "program (return_statement (keyEncoding ))"
    ],
    "getLength": [
        "program (if_statement (parenthesized_expression (binary_expression (length null ))block (expression_statement (assignment_expression (field_access (this.length this.length )method_invocation (method_invocation (lazyStat argument_list )getLen argument_list )))))return_statement (length ))"
    ],
    "getLocations": [
        "program (if_statement (parenthesized_expression (binary_expression (binary_expression (locations null )binary_expression (conf null )))block (local_variable_declaration (boolean variable_declarator (localityPreferred method_invocation (conf getBoolean argument_list (field_access (InputFormatConfig.LOCALITY InputFormatConfig.LOCALITY )false ))))expression_statement (assignment_expression (locations ternary_expression (localityPreferred method_invocation (Util blockLocations argument_list (task conf ))ANYWHERE ))))block (expression_statement (assignment_expression (locations ANYWHERE ))))return_statement (locations ))"
    ],
    "getMapEncoding": [
        "program (local_variable_declaration (integral_type variable_declarator (index method_invocation (columnEncoding indexOf argument_list (field_access (AccumuloHiveConstants.COLON AccumuloHiveConstants.COLON )))))if_statement (parenthesized_expression (binary_expression (unary_expression (1 )index ))block (throw_statement (object_creation_expression (IllegalArgumentException argument_list (\"Serialized column encoding did not contain a pair of encodings to split\" )))))local_variable_declaration (String variable_declarator (encoding1 method_invocation (columnEncoding substring argument_list (0 index )))variable_declarator (encoding2 method_invocation (columnEncoding substring argument_list (binary_expression (index 1 )))))return_statement (method_invocation (Maps immutableEntry argument_list (method_invocation (get argument_list (encoding1 ))method_invocation (get argument_list (encoding2 ))))))"
    ],
    "getMappingSpec": [
        "program (return_statement (mappingSpec ))"
    ],
    "getMapSize": [
        "program (if_statement (parenthesized_expression (unary_expression (method_invocation (getParsed argument_list )))block (expression_statement (method_invocation (parse argument_list ))))return_statement (method_invocation (cachedMap size argument_list )))"
    ],
    "getMapValueElement": [
        "program (if_statement (parenthesized_expression (unary_expression (method_invocation (getParsed argument_list )))block (expression_statement (method_invocation (parse argument_list ))))enhanced_for_statement (generic_type (scoped_type_identifier (Map Entry )type_arguments (Object Object ))entry method_invocation (cachedMap entrySet argument_list )block (local_variable_declaration (generic_type (LazyPrimitive type_arguments (wildcard wildcard ))variable_declarator (lazyKeyI cast_expression (generic_type (LazyPrimitive type_arguments (wildcard wildcard ))method_invocation (entry getKey argument_list ))))local_variable_declaration (Object variable_declarator (keyI method_invocation (lazyKeyI getWritableObject argument_list )))if_statement (parenthesized_expression (binary_expression (keyI null ))block (continue_statement ))if_statement (parenthesized_expression (method_invocation (keyI equals argument_list (key )))block (local_variable_declaration (Object variable_declarator (_value method_invocation (entry getValue argument_list )))if_statement (parenthesized_expression (instanceof_expression (_value LazyObject ))block (local_variable_declaration (generic_type (LazyObject type_arguments (wildcard ))variable_declarator (v cast_expression (generic_type (LazyObject type_arguments (wildcard ))method_invocation (entry getValue argument_list ))))return_statement (ternary_expression (binary_expression (v null )v method_invocation (v getObject argument_list ))))block (return_statement (_value )))))))return_statement (null ))"
    ],
    "getMap": [
        "program (return_statement (map ))"
    ],
    "getMaxIndexRows": [
        "program (local_variable_declaration (Configuration variable_declarator (conf object_creation_expression (Configuration argument_list )))expression_statement (method_invocation (conf setInt argument_list (field_access (AccumuloIndexParameters.MAX_INDEX_ROWS AccumuloIndexParameters.MAX_INDEX_ROWS )10 )))local_variable_declaration (integral_type variable_declarator (maxRows method_invocation (object_creation_expression (AccumuloIndexParameters argument_list (conf ))getMaxIndexRows argument_list )))expression_statement (method_invocation (assertEquals argument_list (10 maxRows ))))"
    ],
    "getMaxRowIds": [
        "program (return_statement (maxRowIds ))"
    ],
    "getMetaHook": [
        "program (return_statement (object_creation_expression (HiveIcebergMetaHook argument_list (conf ))))"
    ],
    "getName": [
        "program (return_statement (\"Blackhole Operator\" ))"
    ],
    "getOutputFormatClass": [
        "program (return_statement (class_literal (HiveIcebergOutputFormat )))"
    ],
    "getPairCollection": [
        "program (local_variable_declaration (modifiers generic_type (HashSet type_arguments (generic_type (Pair type_arguments (Text Text ))))variable_declarator (pairs object_creation_expression (generic_type (HashSet type_arguments (generic_type (Pair type_arguments (Text Text ))))argument_list )))enhanced_for_statement (ColumnMapping columnMapping columnMappings block (if_statement (parenthesized_expression (instanceof_expression (columnMapping HiveAccumuloColumnMapping ))block (local_variable_declaration (HiveAccumuloColumnMapping variable_declarator (accumuloColumnMapping cast_expression (HiveAccumuloColumnMapping columnMapping )))local_variable_declaration (Text variable_declarator (cf object_creation_expression (Text argument_list (method_invocation (accumuloColumnMapping getColumnFamily argument_list )))))local_variable_declaration (Text variable_declarator (cq null ))if_statement (parenthesized_expression (binary_expression (null method_invocation (accumuloColumnMapping getColumnQualifier argument_list )))block (expression_statement (assignment_expression (cq object_creation_expression (Text argument_list (method_invocation (accumuloColumnMapping getColumnQualifier argument_list )))))))expression_statement (method_invocation (pairs add argument_list (object_creation_expression (generic_type (Pair type_arguments (Text Text ))argument_list (cf cq ))))))if_statement (parenthesized_expression (instanceof_expression (columnMapping HiveAccumuloMapColumnMapping ))block (local_variable_declaration (HiveAccumuloMapColumnMapping variable_declarator (mapMapping cast_expression (HiveAccumuloMapColumnMapping columnMapping )))expression_statement (method_invocation (pairs add argument_list (object_creation_expression (generic_type (Pair type_arguments (Text Text ))argument_list (object_creation_expression (Text argument_list (method_invocation (mapMapping getColumnFamily argument_list )))null ))))))))))expression_statement (method_invocation (log info argument_list (binary_expression (binary_expression (binary_expression (\"Computed columns to fetch (\" pairs )\") from \" )columnMappings ))))return_statement (pairs ))"
    ],
    "getpCompare": [
        "program (return_statement (pCompare ))"
    ],
    "getPos": [
        "program (return_statement (position ))"
    ],
    "getPrimitiveCompare": [
        "program (return_statement (comp ))"
    ],
    "getPrimitiveComparisonClass": [
        "program (if_statement (parenthesized_expression (unary_expression (method_invocation (pComparisons containsKey argument_list (type ))))block (throw_statement (object_creation_expression (NoSuchPrimitiveComparisonException argument_list (binary_expression (\"Null primitive comparison for specified key: \" type ))))))return_statement (method_invocation (pComparisons get argument_list (type ))))"
    ],
    "getPrimitiveComparison": [
        "program (local_variable_declaration (generic_type (Class type_arguments (wildcard (PrimitiveComparison )))variable_declarator (clz method_invocation (getPrimitiveComparisonClass argument_list (type ))))try_statement (block (return_statement (method_invocation (clz newInstance argument_list )))catch_clause (catch_formal_parameter (catch_type (ClassCastException )e )block (throw_statement (object_creation_expression (SerDeException argument_list (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (\"Column type mismatch in WHERE clause \" method_invocation (method_invocation (sc getIndexExpr argument_list )getExprString argument_list ))\" found type \" )method_invocation (method_invocation (sc getConstantDesc argument_list )getTypeString argument_list ))\" instead of \" )method_invocation (method_invocation (sc getColumnDesc argument_list )getTypeString argument_list )))))))catch_clause (catch_formal_parameter (catch_type (IllegalAccessException )e )block (throw_statement (object_creation_expression (SerDeException argument_list (\"Could not instantiate class for WHERE clause\" e )))))catch_clause (catch_formal_parameter (catch_type (InstantiationException )e )block (throw_statement (object_creation_expression (SerDeException argument_list (\"Could not instantiate class for WHERE clause\" e )))))))"
    ],
    "getProgress": [
        "program (return_statement (0 ))"
    ],
    "getRange": [
        "program (local_variable_declaration (generic_type (Class type_arguments (wildcard (CompareOp )))variable_declarator (opClz ))try_statement (block (expression_statement (assignment_expression (opClz method_invocation (predicateHandler getCompareOpClass argument_list (method_invocation (genericUdf getUdfName argument_list ))))))catch_clause (catch_formal_parameter (catch_type (NoSuchCompareOpException )e )block (throw_statement (object_creation_expression (IllegalArgumentException argument_list (binary_expression (\"Unhandled UDF class: \" method_invocation (genericUdf getUdfName argument_list ))))))))if_statement (parenthesized_expression (instanceof_expression (leftHandNode ExprNodeConstantDesc ))block (return_statement (method_invocation (getConstantOpColumnRange argument_list (opClz constText ))))if_statement (parenthesized_expression (instanceof_expression (leftHandNode ExprNodeColumnDesc ))block (return_statement (method_invocation (getColumnOpConstantRange argument_list (opClz constText ))))block (throw_statement (object_creation_expression (IllegalStateException argument_list (\"Expected column or constant on LHS of expression\" )))))))"
    ],
    "getRawType": [
        "program (if_statement (parenthesized_expression (binary_expression (hiveType null ))block (return_statement (method_invocation (method_invocation (method_invocation (hiveType toLowerCase argument_list )replaceFirst argument_list (DIM_PAT \"\" ))trim argument_list ))))return_statement (hiveType ))"
    ],
    "getRecordEncoding": [
        "program (return_statement (method_invocation (Boolean valueOf argument_list (method_invocation (conf get argument_list (method_invocation (enumToConfKey argument_list (implementingClass field_access (WriteOpts.BINARY_ENCODING WriteOpts.BINARY_ENCODING )))))))))"
    ],
    "getRecordReader": [
        "program (return_statement (method_invocation (storageFormatTest getRecordReader argument_list (readPath ))))"
    ],
    "getRecordWriter": [
        "program (return_statement (method_invocation (storageFormatTest getRecordWriter argument_list (recordWriterPath ))))"
    ],
    "getRowIdMapping": [
        "program (return_statement (rowIdMapping ))"
    ],
    "getRowIdOffset": [
        "program (return_statement (method_invocation (columnMapper getRowIdOffset argument_list )))"
    ],
    "getRowId": [
        "program (local_variable_declaration (VirtualColumn variable_declarator (rowId field_access (VirtualColumn.ROW_POSITION VirtualColumn.ROW_POSITION )))return_statement (object_creation_expression (FieldSchema argument_list (method_invocation (rowId getName argument_list )method_invocation (method_invocation (rowId getTypeInfo argument_list )getTypeName argument_list )\"\" ))))"
    ],
    "getSearchConditions": [
        "program (local_variable_declaration (modifiers generic_type (List type_arguments (IndexSearchCondition ))variable_declarator (sConditions method_invocation (Lists newArrayList argument_list )))local_variable_declaration (ExprNodeDesc variable_declarator (filterExpr method_invocation (getExpression argument_list (conf ))))if_statement (parenthesized_expression (binary_expression (null filterExpr ))block (return_statement (sConditions )))local_variable_declaration (IndexPredicateAnalyzer variable_declarator (analyzer method_invocation (newAnalyzer argument_list (conf ))))local_variable_declaration (ExprNodeDesc variable_declarator (residual method_invocation (analyzer analyzePredicate argument_list (filterExpr sConditions ))))if_statement (parenthesized_expression (binary_expression (residual null ))block (throw_statement (object_creation_expression (RuntimeException argument_list (binary_expression (\"Unexpected residual predicate: \" method_invocation (residual getExprString argument_list )))))))return_statement (sConditions ))"
    ],
    "getSerDeClass": [
        "program (return_statement (class_literal (HiveIcebergSerDe )))"
    ],
    "getSplits": [
        "program (return_statement (splits ))"
    ],
    "getSplit": [
        "program (return_statement (field_access (this.split this.split )))"
    ],
    "getStringEncoding": [
        "program (return_statement (method_invocation (IndexOutputConfigurator getRecordEncoding argument_list (CLASS job ))))"
    ],
    "getTableAuths": [
        "program (local_variable_declaration (String variable_declarator (auths method_invocation (conf get argument_list (field_access (AccumuloSerDeParameters.AUTHORIZATIONS_KEY AccumuloSerDeParameters.AUTHORIZATIONS_KEY )))))if_statement (parenthesized_expression (binary_expression (binary_expression (auths null )unary_expression (method_invocation (auths isEmpty argument_list ))))block (return_statement (object_creation_expression (Authorizations argument_list (method_invocation (method_invocation (auths trim argument_list )getBytes argument_list (field_access (StandardCharsets.UTF_8 StandardCharsets.UTF_8 ))))))))return_statement (object_creation_expression (Authorizations argument_list )))"
    ],
    "getTableName": [
        "program (return_statement (\"AcidTable\" ))"
    ],
    "getTuples": [
        "program (return_statement (method_invocation (Collections unmodifiableList argument_list (tuples ))))"
    ],
    "getTypesString": [
        "program (local_variable_declaration (StringBuilder variable_declarator (sb object_creation_expression (StringBuilder argument_list )))enhanced_for_statement (ColumnMapping columnMapping columnMappings block (if_statement (parenthesized_expression (binary_expression (method_invocation (sb length argument_list )0 ))block (expression_statement (method_invocation (sb append argument_list (field_access (AccumuloHiveConstants.COLON AccumuloHiveConstants.COLON ))))))if_statement (parenthesized_expression (instanceof_expression (columnMapping HiveAccumuloRowIdColumnMapping ))block (expression_statement (method_invocation (sb append argument_list (field_access (serdeConstants.STRING_TYPE_NAME serdeConstants.STRING_TYPE_NAME )))))if_statement (parenthesized_expression (instanceof_expression (columnMapping HiveAccumuloColumnMapping ))block (expression_statement (method_invocation (sb append argument_list (field_access (serdeConstants.STRING_TYPE_NAME serdeConstants.STRING_TYPE_NAME )))))if_statement (parenthesized_expression (instanceof_expression (columnMapping HiveAccumuloMapColumnMapping ))block (expression_statement (method_invocation (method_invocation (method_invocation (method_invocation (method_invocation (method_invocation (sb append argument_list (field_access (serdeConstants.MAP_TYPE_NAME serdeConstants.MAP_TYPE_NAME )))append argument_list (\"<\" ))append argument_list (field_access (serdeConstants.STRING_TYPE_NAME serdeConstants.STRING_TYPE_NAME )))append argument_list (\",\" ))append argument_list (field_access (serdeConstants.STRING_TYPE_NAME serdeConstants.STRING_TYPE_NAME )))append argument_list (\">\" ))))block (throw_statement (object_creation_expression (IllegalArgumentException argument_list (binary_expression (\"Cannot process ColumnMapping of type \" method_invocation (method_invocation (columnMapping getClass argument_list )getName argument_list )))))))))))return_statement (method_invocation (sb toString argument_list )))"
    ],
    "getUtf8Value": [
        "program (return_statement (object_creation_expression (Text argument_list (method_invocation (method_invocation (objInspector getWritableConstantValue argument_list )toString argument_list )))))"
    ],
    "getValueEncoding": [
        "program (return_statement (valueEncoding ))"
    ],
    "getValue": [
        "program (return_statement (value ))"
    ],
    "getZooKeepers": [
        "program (expression_statement (method_invocation (Preconditions checkNotNull argument_list (conf )))return_statement (method_invocation (conf get argument_list (ZOOKEEPERS ))))"
    ],
    "greaterThanOrEqual": [
        "program (local_variable_declaration (GreaterThanOrEqual variable_declarator (greaterThanOrEqualObj object_creation_expression (GreaterThanOrEqual argument_list (strCompare ))))local_variable_declaration (array_type (integral_type dimensions )variable_declarator (val method_invocation (\"aab\" getBytes argument_list )))expression_statement (method_invocation (assertTrue argument_list (method_invocation (greaterThanOrEqualObj accept argument_list (val )))))expression_statement (assignment_expression (val method_invocation (\"aa\" getBytes argument_list )))expression_statement (method_invocation (assertFalse argument_list (method_invocation (greaterThanOrEqualObj accept argument_list (val )))))expression_statement (assignment_expression (val method_invocation (\"aaa\" getBytes argument_list )))expression_statement (method_invocation (assertTrue argument_list (method_invocation (greaterThanOrEqualObj accept argument_list (val ))))))"
    ],
    "greaterThan": [
        "program (local_variable_declaration (GreaterThan variable_declarator (greaterThanObj object_creation_expression (GreaterThan argument_list (strCompare ))))local_variable_declaration (array_type (integral_type dimensions )variable_declarator (val method_invocation (\"aab\" getBytes argument_list )))expression_statement (method_invocation (assertTrue argument_list (method_invocation (greaterThanObj accept argument_list (val )))))expression_statement (assignment_expression (val method_invocation (\"aa\" getBytes argument_list )))expression_statement (method_invocation (assertFalse argument_list (method_invocation (greaterThanObj accept argument_list (val )))))expression_statement (assignment_expression (val method_invocation (\"aaa\" getBytes argument_list )))expression_statement (method_invocation (assertFalse argument_list (method_invocation (greaterThanObj accept argument_list (val ))))))"
    ],
    "hasColumnEncoding": [
        "program (expression_statement (method_invocation (Preconditions checkNotNull argument_list (columnMapping )))local_variable_declaration (integral_type variable_declarator (offset method_invocation (columnMapping lastIndexOf argument_list (field_access (AccumuloHiveConstants.POUND AccumuloHiveConstants.POUND )))))if_statement (parenthesized_expression (binary_expression (binary_expression (0 offset )binary_expression (field_access (AccumuloHiveConstants.ESCAPE AccumuloHiveConstants.ESCAPE )method_invocation (columnMapping charAt argument_list (binary_expression (offset 1 ))))))block (return_statement (false )))return_statement (binary_expression (unary_expression (1 )offset )))"
    ],
    "hasFamAndQual": [
        "program (enhanced_for_statement (ColumnTuple tuple tuples block (if_statement (parenthesized_expression (binary_expression (method_invocation (method_invocation (tuple getCf argument_list )equals argument_list (fam ))method_invocation (method_invocation (tuple getCq argument_list )equals argument_list (qual ))))block (return_statement (true )))))return_statement (false ))"
    ],
    "hasRowIdMapping": [
        "program (return_statement (binary_expression (null rowIdMapping )))"
    ],
    "hexDump": [
        "program (local_variable_declaration (StringBuilder variable_declarator (sb object_creation_expression (StringBuilder argument_list )))local_variable_declaration (array_type (integral_type dimensions )variable_declarator (arr ba ))local_variable_declaration (integral_type variable_declarator (len field_access (ba.length ba.length )))for_statement (local_variable_declaration (integral_type variable_declarator (i 0 ))binary_expression (i len )update_expression (i )block (local_variable_declaration (integral_type variable_declarator (b array_access (arr i )))if_statement (parenthesized_expression (binary_expression (binary_expression (b 32 )binary_expression (b 126 )))block (expression_statement (method_invocation (sb append argument_list (cast_expression (integral_type b )))))block (expression_statement (method_invocation (sb append argument_list (method_invocation (String format argument_list (\"x%02x\" array_creation_expression (Object dimensions array_initializer (method_invocation (Byte valueOf argument_list (b )))))))))))))return_statement (method_invocation (sb toString argument_list )))"
    ],
    "init": [
        "program (expression_statement (method_invocation (userMap put argument_list (correctUser correctPassword ))))"
    ],
    "isEqual": [
        "program (return_statement (method_invocation (method_invocation (serialize argument_list (value ))equals argument_list (constant ))))"
    ],
    "isIndexed": [
        "program (return_statement (false ))"
    ],
    "isMapEncoding": [
        "program (return_statement (binary_expression (unary_expression (1 )method_invocation (columnEncoding indexOf argument_list (field_access (AccumuloHiveConstants.COLON AccumuloHiveConstants.COLON ))))))"
    ],
    "isNotEqual": [
        "program (return_statement (unary_expression (method_invocation (isEqual argument_list (value )))))"
    ],
    "isPrefix": [
        "program (expression_statement (method_invocation (Preconditions checkNotNull argument_list (maybePrefix )))if_statement (parenthesized_expression (binary_expression (field_access (AccumuloHiveConstants.ASTERISK AccumuloHiveConstants.ASTERISK )method_invocation (maybePrefix charAt argument_list (binary_expression (method_invocation (maybePrefix length argument_list )1 )))))block (if_statement (parenthesized_expression (binary_expression (method_invocation (maybePrefix length argument_list )1 ))block (return_statement (binary_expression (field_access (AccumuloHiveConstants.ESCAPE AccumuloHiveConstants.ESCAPE )method_invocation (maybePrefix charAt argument_list (binary_expression (method_invocation (maybePrefix length argument_list )2 ))))))block (return_statement (true )))))return_statement (false ))"
    ],
    "isPurge": [
        "program (return_statement (binary_expression (unary_expression (method_invocation (MetaStoreUtils isExternalTable argument_list (table )))method_invocation (MetaStoreUtils isExternalTablePurge argument_list (table )))))"
    ],
    "lessThanOrEqual": [
        "program (local_variable_declaration (LessThanOrEqual variable_declarator (lessThanOrEqualObj object_creation_expression (LessThanOrEqual argument_list (strCompare ))))local_variable_declaration (array_type (integral_type dimensions )variable_declarator (val method_invocation (\"aab\" getBytes argument_list )))expression_statement (method_invocation (assertFalse argument_list (method_invocation (lessThanOrEqualObj accept argument_list (val )))))expression_statement (assignment_expression (val method_invocation (\"aa\" getBytes argument_list )))expression_statement (method_invocation (assertTrue argument_list (method_invocation (lessThanOrEqualObj accept argument_list (val )))))expression_statement (assignment_expression (val method_invocation (\"aaa\" getBytes argument_list )))expression_statement (method_invocation (assertTrue argument_list (method_invocation (lessThanOrEqualObj accept argument_list (val ))))))"
    ],
    "lessThan": [
        "program (local_variable_declaration (LessThan variable_declarator (lessThanObj object_creation_expression (LessThan argument_list (strCompare ))))local_variable_declaration (array_type (integral_type dimensions )variable_declarator (val method_invocation (\"aab\" getBytes argument_list )))expression_statement (method_invocation (assertFalse argument_list (method_invocation (lessThanObj accept argument_list (val )))))expression_statement (assignment_expression (val method_invocation (\"aa\" getBytes argument_list )))expression_statement (method_invocation (assertTrue argument_list (method_invocation (lessThanObj accept argument_list (val )))))expression_statement (assignment_expression (val method_invocation (\"aaa\" getBytes argument_list )))expression_statement (method_invocation (assertFalse argument_list (method_invocation (lessThanObj accept argument_list (val ))))))"
    ],
    "like": [
        "program (local_variable_declaration (Like variable_declarator (likeObj object_creation_expression (Like argument_list (strCompare ))))local_variable_declaration (String variable_declarator (condition \"%a\" ))expression_statement (method_invocation (assertTrue argument_list (method_invocation (likeObj accept argument_list (method_invocation (condition getBytes argument_list ))))))expression_statement (assignment_expression (condition \"%a%\" ))expression_statement (method_invocation (assertTrue argument_list (method_invocation (likeObj accept argument_list (method_invocation (condition getBytes argument_list ))))))expression_statement (assignment_expression (condition \"a%\" ))expression_statement (method_invocation (assertTrue argument_list (method_invocation (likeObj accept argument_list (method_invocation (condition getBytes argument_list ))))))expression_statement (assignment_expression (condition \"a%aa\" ))expression_statement (method_invocation (assertFalse argument_list (method_invocation (likeObj accept argument_list (method_invocation (condition getBytes argument_list ))))))expression_statement (assignment_expression (condition \"b%\" ))expression_statement (method_invocation (assertFalse argument_list (method_invocation (likeObj accept argument_list (method_invocation (condition getBytes argument_list ))))))expression_statement (assignment_expression (condition \"%ab%\" ))expression_statement (method_invocation (assertFalse argument_list (method_invocation (likeObj accept argument_list (method_invocation (condition getBytes argument_list ))))))expression_statement (assignment_expression (condition \"%ba\" ))expression_statement (method_invocation (assertFalse argument_list (method_invocation (likeObj accept argument_list (method_invocation (condition getBytes argument_list )))))))"
    ],
    "loadDependentJars": [
        "program (local_variable_declaration (modifiers (annotation (SuppressWarnings annotation_argument_list (\"deprecation\" )))generic_type (List type_arguments (generic_type (Class type_arguments (wildcard ))))variable_declarator (classesToLoad object_creation_expression (generic_type (ArrayList type_arguments )argument_list (method_invocation (Arrays asList argument_list (class_literal (Tracer )class_literal (Fate )class_literal (Connector )class_literal (Main )class_literal (ZooKeeper )class_literal (AccumuloStorageHandler )))))))try_statement (block (expression_statement (method_invocation (classesToLoad add argument_list (method_invocation (Class forName argument_list (\"org.apache.htrace.Trace\" ))))))catch_clause (catch_formal_parameter (catch_type (Exception )e )block (expression_statement (method_invocation (log warn argument_list (\"Failed to load class for HTrace jar, trying to continue\" e ))))))try_statement (block (expression_statement (method_invocation (JarUtils addDependencyJars argument_list (conf classesToLoad ))))catch_clause (catch_formal_parameter (catch_type (IOException )e )block (expression_statement (method_invocation (log error argument_list (\"Could not add necessary Accumulo dependencies to classpath\" e )))))))"
    ],
    "matchQualAndFam": [
        "program (expression_statement (method_invocation (k getColumnFamily argument_list (cfHolder )))expression_statement (method_invocation (k getColumnQualifier argument_list (cqHolder )))return_statement (binary_expression (method_invocation (cfHolder equals argument_list (columnMappingFamily ))method_invocation (cqHolder equals argument_list (columnMappingQualifier )))))"
    ],
    "mergeTokenIntoJobConf": [
        "program (local_variable_declaration (JobConf variable_declarator (accumuloJobConf object_creation_expression (JobConf argument_list (jobConf ))))expression_statement (method_invocation (method_invocation (accumuloJobConf getCredentials argument_list )addToken argument_list (method_invocation (accumuloToken getService argument_list )accumuloToken )))expression_statement (method_invocation (method_invocation (ShimLoader getHadoopShims argument_list )mergeCredentials argument_list (jobConf accumuloJobConf ))))"
    ],
    "newAnalyzer": [
        "program (local_variable_declaration (IndexPredicateAnalyzer variable_declarator (analyzer object_creation_expression (IndexPredicateAnalyzer argument_list )))expression_statement (method_invocation (analyzer clearAllowedColumnNames argument_list ))enhanced_for_statement (String op method_invocation (cOpKeyset argument_list )block (expression_statement (method_invocation (analyzer addComparisonOp argument_list (op )))))local_variable_declaration (array_type (String dimensions )variable_declarator (hiveColumnNames method_invocation (conf getStrings argument_list (field_access (serdeConstants.LIST_COLUMNS serdeConstants.LIST_COLUMNS )))))enhanced_for_statement (String col hiveColumnNames block (expression_statement (method_invocation (analyzer allowColumnName argument_list (col )))))return_statement (analyzer ))"
    ],
    "next": [
        "program (if_statement (parenthesized_expression (binary_expression (update_expression (idx )field_access (keys.length keys.length )))return_statement (false ))return_statement (true ))"
    ],
    "parseMapping": [
        "program (local_variable_declaration (integral_type variable_declarator (index 0 ))while_statement (parenthesized_expression (true )block (if_statement (parenthesized_expression (binary_expression (index method_invocation (columnSpec length argument_list )))block (expression_statement (method_invocation (log error argument_list (binary_expression (binary_expression (\"Cannot parse '\" columnSpec )\"' as colon-separated column configuration\" ))))throw_statement (object_creation_expression (InvalidColumnMappingException argument_list (\"Columns must be provided as colon-separated family and qualifier pairs\" )))))expression_statement (assignment_expression (index method_invocation (columnSpec indexOf argument_list (field_access (AccumuloHiveConstants.COLON AccumuloHiveConstants.COLON )index ))))if_statement (parenthesized_expression (binary_expression (unary_expression (1 )index ))block (expression_statement (method_invocation (log error argument_list (binary_expression (binary_expression (\"Cannot parse '\" columnSpec )\"' as colon-separated column configuration\" ))))throw_statement (object_creation_expression (InvalidColumnMappingException argument_list (\"Columns must be provided as colon-separated family and qualifier pairs\" )))))if_statement (parenthesized_expression (binary_expression (binary_expression (index 1 )0 ))block (local_variable_declaration (integral_type variable_declarator (testChar method_invocation (columnSpec charAt argument_list (binary_expression (index 1 )))))if_statement (parenthesized_expression (binary_expression (field_access (AccumuloHiveConstants.ESCAPE AccumuloHiveConstants.ESCAPE )testChar ))block (expression_statement (update_expression (index ))continue_statement ))))break_statement ))local_variable_declaration (String variable_declarator (cf method_invocation (columnSpec substring argument_list (0 index )))variable_declarator (cq method_invocation (columnSpec substring argument_list (binary_expression (index 1 )))))if_statement (parenthesized_expression (binary_expression (unary_expression (1 )method_invocation (cf indexOf argument_list (field_access (AccumuloHiveConstants.ESCAPED_COLON AccumuloHiveConstants.ESCAPED_COLON )))))block (expression_statement (assignment_expression (cf method_invocation (cf replaceAll argument_list (field_access (AccumuloHiveConstants.ESCAPED_COLON_REGEX AccumuloHiveConstants.ESCAPED_COLON_REGEX )method_invocation (Character toString argument_list (field_access (AccumuloHiveConstants.COLON AccumuloHiveConstants.COLON )))))))))if_statement (parenthesized_expression (binary_expression (unary_expression (1 )method_invocation (cq indexOf argument_list (field_access (AccumuloHiveConstants.ESCAPED_COLON AccumuloHiveConstants.ESCAPED_COLON )))))block (expression_statement (assignment_expression (cq method_invocation (cq replaceAll argument_list (field_access (AccumuloHiveConstants.ESCAPED_COLON_REGEX AccumuloHiveConstants.ESCAPED_COLON_REGEX )method_invocation (Character toString argument_list (field_access (AccumuloHiveConstants.COLON AccumuloHiveConstants.COLON )))))))))return_statement (method_invocation (Maps immutableEntry argument_list (cf cq ))))"
    ],
    "parse": [
        "program (local_variable_declaration (HplsqlLexer variable_declarator (lexer object_creation_expression (HplsqlLexer argument_list (object_creation_expression (ANTLRInputStream argument_list (method_invocation (proc getSource argument_list )))))))local_variable_declaration (CommonTokenStream variable_declarator (tokens object_creation_expression (CommonTokenStream argument_list (lexer ))))local_variable_declaration (HplsqlParser variable_declarator (parser object_creation_expression (HplsqlParser argument_list (tokens ))))local_variable_declaration (ProcVisitor variable_declarator (visitor object_creation_expression (ProcVisitor argument_list )))expression_statement (method_invocation (method_invocation (parser program argument_list )accept argument_list (visitor )))return_statement (ternary_expression (binary_expression (field_access (visitor.func visitor.func )null )field_access (visitor.func visitor.func )field_access (visitor.proc visitor.proc ))))"
    ],
    "pComparisonKeyset": [
        "program (return_statement (method_invocation (pComparisons keySet argument_list )))"
    ],
    "preCreateTable": [
        "program (local_variable_declaration (scoped_type_identifier (scoped_type_identifier (scoped_type_identifier (scoped_type_identifier (scoped_type_identifier (scoped_type_identifier (org apache )hadoop )hive )metastore )api )Table )variable_declarator (hmsTable method_invocation (request getTable argument_list )))if_statement (parenthesized_expression (method_invocation (hmsTable isTemporary argument_list ))block (throw_statement (object_creation_expression (UnsupportedOperationException argument_list (\"Creation of temporary iceberg tables is not supported.\" )))))expression_statement (assignment_expression (field_access (this.catalogProperties this.catalogProperties )method_invocation (getCatalogProperties argument_list (hmsTable ))))expression_statement (method_invocation (method_invocation (hmsTable getParameters argument_list )put argument_list (field_access (BaseMetastoreTableOperations.TABLE_TYPE_PROP BaseMetastoreTableOperations.TABLE_TYPE_PROP )method_invocation (field_access (BaseMetastoreTableOperations.ICEBERG_TABLE_TYPE_VALUE BaseMetastoreTableOperations.ICEBERG_TABLE_TYPE_VALUE )toUpperCase argument_list ))))if_statement (parenthesized_expression (unary_expression (method_invocation (Catalogs hiveCatalog argument_list (conf catalogProperties ))))block (if_statement (parenthesized_expression (method_invocation (Boolean parseBoolean argument_list (method_invocation (field_access (this.catalogProperties this.catalogProperties )getProperty argument_list (field_access (hive_metastoreConstants.TABLE_IS_CTLT hive_metastoreConstants.TABLE_IS_CTLT ))))))block (throw_statement (object_creation_expression (UnsupportedOperationException argument_list (\"CTLT target table must be a HiveCatalog table.\" )))))expression_statement (method_invocation (method_invocation (hmsTable getSd argument_list )setInputFormat argument_list (method_invocation (class_literal (HiveIcebergInputFormat )getCanonicalName argument_list ))))expression_statement (method_invocation (method_invocation (hmsTable getSd argument_list )setOutputFormat argument_list (method_invocation (class_literal (HiveIcebergOutputFormat )getCanonicalName argument_list ))))try_statement (block (expression_statement (assignment_expression (field_access (this.icebergTable this.icebergTable )method_invocation (IcebergTableUtil getTable argument_list (conf catalogProperties true ))))expression_statement (method_invocation (Preconditions checkArgument argument_list (binary_expression (method_invocation (catalogProperties getProperty argument_list (field_access (InputFormatConfig.TABLE_SCHEMA InputFormatConfig.TABLE_SCHEMA )))null )\"Iceberg table already created - can not use provided schema\" )))expression_statement (method_invocation (Preconditions checkArgument argument_list (binary_expression (method_invocation (catalogProperties getProperty argument_list (field_access (InputFormatConfig.PARTITION_SPEC InputFormatConfig.PARTITION_SPEC )))null )\"Iceberg table already created - can not use provided partition specification\" )))expression_statement (method_invocation (LOG info argument_list (\"Iceberg table already exists {}\" icebergTable )))return_statement )catch_clause (catch_formal_parameter (catch_type (NoSuchTableException )nte )block ))))local_variable_declaration (generic_type (Set type_arguments (String ))variable_declarator (identifierFields method_invocation (method_invocation (method_invocation (Optional ofNullable argument_list (method_invocation (request getPrimaryKeys argument_list )))map argument_list (lambda_expression (primaryKeys method_invocation (method_invocation (method_invocation (primaryKeys stream argument_list )map argument_list (method_reference (SQLPrimaryKey getColumn_name )))collect argument_list (method_invocation (Collectors toSet argument_list ))))))orElse argument_list (method_invocation (Collections emptySet argument_list )))))local_variable_declaration (Schema variable_declarator (schema method_invocation (schema argument_list (catalogProperties hmsTable identifierFields ))))local_variable_declaration (PartitionSpec variable_declarator (spec method_invocation (spec argument_list (conf schema hmsTable ))))if_statement (parenthesized_expression (method_invocation (hmsTable isSetPartitionKeys argument_list ))block (expression_statement (method_invocation (method_invocation (method_invocation (hmsTable getSd argument_list )getCols argument_list )addAll argument_list (method_invocation (hmsTable getPartitionKeys argument_list ))))expression_statement (method_invocation (hmsTable setPartitionKeysIsSet argument_list (false )))))expression_statement (method_invocation (catalogProperties put argument_list (field_access (InputFormatConfig.TABLE_SCHEMA InputFormatConfig.TABLE_SCHEMA )method_invocation (SchemaParser toJson argument_list (schema )))))expression_statement (method_invocation (catalogProperties put argument_list (field_access (InputFormatConfig.PARTITION_SPEC InputFormatConfig.PARTITION_SPEC )method_invocation (PartitionSpecParser toJson argument_list (spec )))))expression_statement (method_invocation (setCommonHmsTablePropertiesForIceberg argument_list (hmsTable )))if_statement (parenthesized_expression (method_invocation (method_invocation (hmsTable getParameters argument_list )containsKey argument_list (field_access (BaseMetastoreTableOperations.METADATA_LOCATION_PROP BaseMetastoreTableOperations.METADATA_LOCATION_PROP ))))block (expression_statement (assignment_expression (createHMSTableInHook true ))))expression_statement (method_invocation (assertFileFormat argument_list (method_invocation (catalogProperties getProperty argument_list (field_access (TableProperties.DEFAULT_FILE_FORMAT TableProperties.DEFAULT_FILE_FORMAT ))))))expression_statement (method_invocation (setOrcOnlyFilesParam argument_list (hmsTable )))expression_statement (method_invocation (request setPrimaryKeys argument_list (null ))))"
    ],
    "preDropTable": [
        "program (expression_statement (assignment_expression (field_access (this.catalogProperties this.catalogProperties )method_invocation (getCatalogProperties argument_list (hmsTable ))))expression_statement (assignment_expression (field_access (this.deleteIcebergTable this.deleteIcebergTable )binary_expression (binary_expression (method_invocation (hmsTable getParameters argument_list )null )method_invocation (\"TRUE\" equalsIgnoreCase argument_list (method_invocation (method_invocation (hmsTable getParameters argument_list )get argument_list (field_access (InputFormatConfig.EXTERNAL_TABLE_PURGE InputFormatConfig.EXTERNAL_TABLE_PURGE ))))))))if_statement (parenthesized_expression (binary_expression (binary_expression (deleteIcebergTable method_invocation (Catalogs hiveCatalog argument_list (conf catalogProperties )))deleteData ))block (try_statement (block (local_variable_declaration (String variable_declarator (metadataLocation method_invocation (method_invocation (hmsTable getParameters argument_list )get argument_list (field_access (BaseMetastoreTableOperations.METADATA_LOCATION_PROP BaseMetastoreTableOperations.METADATA_LOCATION_PROP )))))expression_statement (assignment_expression (field_access (this.deleteIo this.deleteIo )method_invocation (method_invocation (Catalogs loadTable argument_list (conf catalogProperties ))io argument_list )))expression_statement (assignment_expression (field_access (this.deleteMetadata this.deleteMetadata )method_invocation (TableMetadataParser read argument_list (deleteIo metadataLocation )))))catch_clause (catch_formal_parameter (catch_type (Exception )e )block (expression_statement (method_invocation (LOG error argument_list (binary_expression (binary_expression (binary_expression (\"preDropTable: Error during loading Iceberg table or parsing its metadata for HMS table: {}.{}. \" \"In some cases, this might lead to undeleted metadata files under the table directory: {}. \" )\"Please double check and, if needed, manually delete any dangling files/folders, if any. \" )\"In spite of this error, the HMS table drop operation should proceed as normal.\" )method_invocation (hmsTable getDbName argument_list )method_invocation (hmsTable getTableName argument_list )method_invocation (method_invocation (hmsTable getSd argument_list )getLocation argument_list )e )))))))))"
    ],
    "printMutation": [
        "program (if_statement (parenthesized_expression (method_invocation (LOG isTraceEnabled argument_list ))block (expression_statement (method_invocation (LOG trace argument_list (\"Table {} row key: {}\" table method_invocation (this hexDump argument_list (method_invocation (m getRow argument_list ))))))local_variable_declaration (Iterator variable_declarator (itr method_invocation (method_invocation (m getUpdates argument_list )iterator argument_list )))while_statement (parenthesized_expression (method_invocation (itr hasNext argument_list ))block (local_variable_declaration (ColumnUpdate variable_declarator (cu cast_expression (ColumnUpdate method_invocation (itr next argument_list ))))expression_statement (method_invocation (LOG trace argument_list (\"Table {} column: {}:{}\" table method_invocation (this hexDump argument_list (method_invocation (cu getColumnFamily argument_list )))method_invocation (this hexDump argument_list (method_invocation (cu getColumnQualifier argument_list ))))))expression_statement (method_invocation (LOG trace argument_list (\"Table {} security: {}\" table method_invocation (object_creation_expression (ColumnVisibility argument_list (method_invocation (cu getColumnVisibility argument_list )))toString argument_list ))))expression_statement (method_invocation (LOG trace argument_list (\"Table {} value: {}\" table method_invocation (this hexDump argument_list (method_invocation (cu getValue argument_list ))))))))))return_statement (method_invocation (method_invocation (m getUpdates argument_list )size argument_list )))"
    ],
    "processAndOpNode": [
        "program (local_variable_declaration (generic_type (List type_arguments (Range ))variable_declarator (andRanges null ))enhanced_for_statement (Object nodeOutput nodeOutputs block (if_statement (parenthesized_expression (binary_expression (null nodeOutput ))block (continue_statement ))if_statement (parenthesized_expression (binary_expression (null andRanges ))block (expression_statement (assignment_expression (andRanges object_creation_expression (generic_type (ArrayList type_arguments (Range ))argument_list )))))if_statement (parenthesized_expression (instanceof_expression (nodeOutput Range ))block (local_variable_declaration (Range variable_declarator (childRange cast_expression (Range nodeOutput )))if_statement (parenthesized_expression (method_invocation (andRanges isEmpty argument_list ))block (expression_statement (method_invocation (andRanges add argument_list (childRange ))))block (local_variable_declaration (generic_type (List type_arguments (Range ))variable_declarator (newRanges object_creation_expression (generic_type (ArrayList type_arguments (Range ))argument_list )))enhanced_for_statement (Range andRange andRanges block (local_variable_declaration (Range variable_declarator (intersectedRange method_invocation (andRange clip argument_list (childRange true ))))if_statement (parenthesized_expression (binary_expression (null intersectedRange ))block (expression_statement (method_invocation (newRanges add argument_list (intersectedRange )))))))expression_statement (assignment_expression (andRanges newRanges )))))if_statement (parenthesized_expression (instanceof_expression (nodeOutput List ))block (local_variable_declaration (modifiers (annotation (SuppressWarnings annotation_argument_list (\"unchecked\" )))generic_type (List type_arguments (Range ))variable_declarator (childRanges cast_expression (generic_type (List type_arguments (Range ))nodeOutput )))if_statement (parenthesized_expression (method_invocation (andRanges isEmpty argument_list ))block (expression_statement (method_invocation (andRanges addAll argument_list (childRanges ))))block (local_variable_declaration (generic_type (List type_arguments (Range ))variable_declarator (newRanges object_creation_expression (generic_type (ArrayList type_arguments (Range ))argument_list )))enhanced_for_statement (Range andRange andRanges block (enhanced_for_statement (Range childRange childRanges block (local_variable_declaration (Range variable_declarator (intersectedRange method_invocation (andRange clip argument_list (childRange true ))))if_statement (parenthesized_expression (binary_expression (null intersectedRange ))block (expression_statement (method_invocation (newRanges add argument_list (intersectedRange )))))))))expression_statement (assignment_expression (andRanges newRanges )))))block (expression_statement (method_invocation (LOG error argument_list (\"Expected Range from {} but got {}\" nd nodeOutput )))throw_statement (object_creation_expression (IllegalArgumentException argument_list (binary_expression (\"Expected Range but got \" method_invocation (method_invocation (nodeOutput getClass argument_list )getName argument_list ))))))))))return_statement (andRanges ))"
    ],
    "processExpression": [
        "program (local_variable_declaration (GenericUDF variable_declarator (genericUdf method_invocation (func getGenericUDF argument_list )))local_variable_declaration (ExprNodeConstantDesc variable_declarator (constantDesc null ))local_variable_declaration (ExprNodeColumnDesc variable_declarator (columnDesc null ))local_variable_declaration (ExprNodeDesc variable_declarator (leftHandNode null ))enhanced_for_statement (Object nodeOutput nodeOutputs block (if_statement (parenthesized_expression (instanceof_expression (nodeOutput ExprNodeConstantDesc ))block (if_statement (parenthesized_expression (binary_expression (null leftHandNode ))block (expression_statement (assignment_expression (leftHandNode cast_expression (ExprNodeDesc nodeOutput )))))expression_statement (assignment_expression (constantDesc cast_expression (ExprNodeConstantDesc nodeOutput ))))if_statement (parenthesized_expression (instanceof_expression (nodeOutput ExprNodeColumnDesc ))block (if_statement (parenthesized_expression (binary_expression (null leftHandNode ))block (expression_statement (assignment_expression (leftHandNode cast_expression (ExprNodeDesc nodeOutput )))))expression_statement (assignment_expression (columnDesc cast_expression (ExprNodeColumnDesc nodeOutput ))))))))if_statement (parenthesized_expression (binary_expression (binary_expression (null constantDesc )binary_expression (null columnDesc )))block (return_statement (null )))local_variable_declaration (ConstantObjectInspector variable_declarator (objInspector method_invocation (constantDesc getWritableObjectInspector argument_list )))if_statement (parenthesized_expression (unary_expression (method_invocation (field_access (this.hiveRowIdColumnName this.hiveRowIdColumnName )equals argument_list (method_invocation (columnDesc getColumn argument_list )))))block (if_statement (parenthesized_expression (binary_expression (binary_expression (field_access (this.indexScanner this.indexScanner )null )method_invocation (field_access (this.indexScanner this.indexScanner )isIndexed argument_list (method_invocation (columnDesc getColumn argument_list )))))block (return_statement (method_invocation (getIndexedRowIds argument_list (genericUdf leftHandNode method_invocation (columnDesc getColumn argument_list )objInspector )))))return_statement (null )))local_variable_declaration (Text variable_declarator (constText method_invocation (getConstantText argument_list (objInspector ))))return_statement (method_invocation (getRange argument_list (genericUdf leftHandNode constText ))))"
    ],
    "processOrOpNode": [
        "program (local_variable_declaration (generic_type (List type_arguments (Range ))variable_declarator (orRanges object_creation_expression (generic_type (ArrayList type_arguments (Range ))argument_list (field_access (nodeOutputs.length nodeOutputs.length )))))enhanced_for_statement (Object nodeOutput nodeOutputs block (if_statement (parenthesized_expression (instanceof_expression (nodeOutput Range ))block (expression_statement (method_invocation (orRanges add argument_list (cast_expression (Range nodeOutput )))))if_statement (parenthesized_expression (instanceof_expression (nodeOutput List ))block (local_variable_declaration (modifiers (annotation (SuppressWarnings annotation_argument_list (\"unchecked\" )))generic_type (List type_arguments (Range ))variable_declarator (childRanges cast_expression (generic_type (List type_arguments (Range ))nodeOutput )))expression_statement (method_invocation (orRanges addAll argument_list (childRanges ))))block (expression_statement (method_invocation (LOG error argument_list (\"Expected Range from {} but got {}\" nd nodeOutput )))throw_statement (object_creation_expression (IllegalArgumentException argument_list (binary_expression (\"Expected Range but got \" method_invocation (method_invocation (nodeOutput getClass argument_list )getName argument_list ))))))))))if_statement (parenthesized_expression (binary_expression (method_invocation (orRanges size argument_list )1 ))block (return_statement (method_invocation (Range mergeOverlapping argument_list (orRanges ))))if_statement (parenthesized_expression (binary_expression (1 method_invocation (orRanges size argument_list )))block (return_statement (method_invocation (orRanges get argument_list (0 ))))block (return_statement (orRanges )))))"
    ],
    "pushToValue": [
        "program (local_variable_declaration (generic_type (Iterator type_arguments (Key ))variable_declarator (kIter method_invocation (keys iterator argument_list )))local_variable_declaration (generic_type (Iterator type_arguments (Value ))variable_declarator (vIter method_invocation (values iterator argument_list )))while_statement (parenthesized_expression (method_invocation (kIter hasNext argument_list ))block (local_variable_declaration (Key variable_declarator (k method_invocation (kIter next argument_list )))local_variable_declaration (Value variable_declarator (v method_invocation (vIter next argument_list )))expression_statement (method_invocation (row add argument_list (method_invocation (method_invocation (k getColumnFamily argument_list )toString argument_list )method_invocation (method_invocation (k getColumnQualifier argument_list )toString argument_list )method_invocation (v get argument_list )))))))"
    ],
    "readFields": [
        "program (local_variable_declaration (array_type (integral_type dimensions )variable_declarator (data array_creation_expression (integral_type dimensions_expr (method_invocation (in readInt argument_list )))))expression_statement (method_invocation (in readFully argument_list (data )))expression_statement (assignment_expression (field_access (this.task this.task )method_invocation (SerializationUtil deserializeFromBytes argument_list (data )))))"
    ],
    "rollbackCreateTable": [
        " "
    ],
    "rollbackDropTable": [
        " "
    ],
    "serializeColumnMapping": [
        "program (local_variable_declaration (MapObjectInspector variable_declarator (mapObjectInspector cast_expression (MapObjectInspector fieldObjectInspector )))local_variable_declaration (generic_type (Map type_arguments (wildcard wildcard ))variable_declarator (map method_invocation (mapObjectInspector getMap argument_list (value ))))if_statement (parenthesized_expression (binary_expression (map null ))block (return_statement ))local_variable_declaration (ObjectInspector variable_declarator (keyObjectInspector method_invocation (mapObjectInspector getMapKeyObjectInspector argument_list ))variable_declarator (valueObjectInspector method_invocation (mapObjectInspector getMapValueObjectInspector argument_list )))local_variable_declaration (array_type (integral_type dimensions )variable_declarator (cfBytes method_invocation (method_invocation (columnMapping getColumnFamily argument_list )getBytes argument_list (field_access (Charsets.UTF_8 Charsets.UTF_8 ))))variable_declarator (cqPrefixBytes method_invocation (method_invocation (columnMapping getColumnQualifierPrefix argument_list )getBytes argument_list (field_access (Charsets.UTF_8 Charsets.UTF_8 )))))local_variable_declaration (array_type (integral_type dimensions )variable_declarator (cqBytes )variable_declarator (valueBytes ))enhanced_for_statement (generic_type (Entry type_arguments (wildcard wildcard ))entry method_invocation (map entrySet argument_list )block (expression_statement (method_invocation (output reset argument_list ))if_statement (parenthesized_expression (binary_expression (0 field_access (cqPrefixBytes.length cqPrefixBytes.length )))block (expression_statement (method_invocation (output write argument_list (cqPrefixBytes 0 field_access (cqPrefixBytes.length cqPrefixBytes.length ))))))expression_statement (method_invocation (writeWithLevel argument_list (keyObjectInspector method_invocation (entry getKey argument_list )output columnMapping 3 )))expression_statement (assignment_expression (cqBytes method_invocation (output toByteArray argument_list )))expression_statement (method_invocation (output reset argument_list ))expression_statement (method_invocation (writeWithLevel argument_list (valueObjectInspector method_invocation (entry getValue argument_list )output columnMapping 3 )))expression_statement (assignment_expression (valueBytes method_invocation (output toByteArray argument_list )))expression_statement (method_invocation (mutation put argument_list (cfBytes cqBytes visibility valueBytes ))))))"
    ],
    "serializeRowId": [
        "program (local_variable_declaration (ObjectInspector variable_declarator (inspector method_invocation (field getFieldObjectInspector argument_list )))if_statement (parenthesized_expression (binary_expression (method_invocation (inspector getCategory argument_list )field_access (field_access (ObjectInspector.Category.STRUCT ObjectInspector.Category.STRUCT )ObjectInspector.Category.STRUCT )))block (throw_statement (object_creation_expression (IllegalStateException argument_list (binary_expression (\"invalid type value \" method_invocation (inspector getTypeName argument_list )))))))expression_statement (method_invocation (output reset argument_list ))local_variable_declaration (StructObjectInspector variable_declarator (structOI cast_expression (StructObjectInspector inspector )))local_variable_declaration (generic_type (List type_arguments (Object ))variable_declarator (elements method_invocation (structOI getStructFieldsDataAsList argument_list (object ))))local_variable_declaration (generic_type (List type_arguments (wildcard (StructField )))variable_declarator (fields method_invocation (structOI getAllStructFieldRefs argument_list )))for_statement (local_variable_declaration (integral_type variable_declarator (i 0 ))binary_expression (i method_invocation (elements size argument_list ))update_expression (i )block (local_variable_declaration (Object variable_declarator (o method_invocation (elements get argument_list (i ))))local_variable_declaration (StructField variable_declarator (structField method_invocation (fields get argument_list (i ))))if_statement (parenthesized_expression (binary_expression (method_invocation (output getLength argument_list )0 ))block (expression_statement (method_invocation (output write argument_list (separator )))))expression_statement (method_invocation (serializer writeWithLevel argument_list (method_invocation (structField getFieldObjectInspector argument_list )o output rowIdMapping 1 )))))return_statement (method_invocation (output toByteArray argument_list )))"
    ],
    "serialize": [
        "program (return_statement (method_invocation (storageFormatTest serialize argument_list (array_access (rows 0 )oi ))))"
    ],
    "setAccumuloIndexColumns": [
        "program (expression_statement (method_invocation (AccumuloIndexedOutputFormat setIndexColumns argument_list (conf indexColumns ))))"
    ],
    "setAccumuloIndexTableName": [
        "program (expression_statement (method_invocation (AccumuloIndexedOutputFormat setIndexTableName argument_list (conf indexTableName ))))"
    ],
    "setAccumuloStringEncoding": [
        "program (expression_statement (method_invocation (AccumuloIndexedOutputFormat setStringEncoding argument_list (conf isStringEncoded ))))"
    ],
    "setColumnTuples": [
        "program (if_statement (parenthesized_expression (binary_expression (columns null ))block (local_variable_declaration (String variable_declarator (cols method_invocation (columns trim argument_list )))if_statement (parenthesized_expression (binary_expression (unary_expression (method_invocation (cols isEmpty argument_list ))unary_expression (method_invocation (\"*\" equals argument_list (cols )))))block (enhanced_for_statement (String col method_invocation (cols split argument_list (\",\" ))block (local_variable_declaration (array_type (String dimensions )variable_declarator (cfcqtp method_invocation (method_invocation (col trim argument_list )split argument_list (\":\" ))))expression_statement (method_invocation (addIndexCol argument_list (array_access (cfcqtp 0 )array_access (cfcqtp 1 )array_access (cfcqtp 2 )))))))))))"
    ],
    "setConf": [
        "program (expression_statement (assignment_expression (hiveConf object_creation_expression (HiveConf argument_list )))expression_statement (method_invocation (MetastoreConf setBoolVar argument_list (hiveConf field_access (field_access (MetastoreConf.ConfVars.HIVE_IN_TEST MetastoreConf.ConfVars.HIVE_IN_TEST )MetastoreConf.ConfVars.HIVE_IN_TEST )true )))expression_statement (method_invocation (MetastoreConf setVar argument_list (hiveConf field_access (field_access (MetastoreConf.ConfVars.WAREHOUSE MetastoreConf.ConfVars.WAREHOUSE )MetastoreConf.ConfVars.WAREHOUSE )\"/tmp\" )))expression_statement (method_invocation (MetastoreConf setTimeVar argument_list (hiveConf field_access (field_access (MetastoreConf.ConfVars.TXN_TIMEOUT MetastoreConf.ConfVars.TXN_TIMEOUT )MetastoreConf.ConfVars.TXN_TIMEOUT )1 field_access (TimeUnit.SECONDS TimeUnit.SECONDS ))))expression_statement (method_invocation (HiveConf setVar argument_list (hiveConf field_access (field_access (HiveConf.ConfVars.HIVE_AUTHORIZATION_MANAGER HiveConf.ConfVars.HIVE_AUTHORIZATION_MANAGER )HiveConf.ConfVars.HIVE_AUTHORIZATION_MANAGER )method_invocation (class_literal (SQLStdHiveAuthorizerFactory )getName argument_list ))))expression_statement (method_invocation (MetastoreConf setVar argument_list (hiveConf field_access (field_access (MetastoreConf.ConfVars.TRANSACTIONAL_EVENT_LISTENERS MetastoreConf.ConfVars.TRANSACTIONAL_EVENT_LISTENERS )MetastoreConf.ConfVars.TRANSACTIONAL_EVENT_LISTENERS )method_invocation (class_literal (DbNotificationListener )getName argument_list ))))expression_statement (method_invocation (MetastoreConf setTimeVar argument_list (hiveConf field_access (field_access (MetastoreConf.ConfVars.EVENT_DB_LISTENER_CLEAN_INTERVAL MetastoreConf.ConfVars.EVENT_DB_LISTENER_CLEAN_INTERVAL )MetastoreConf.ConfVars.EVENT_DB_LISTENER_CLEAN_INTERVAL )10 field_access (TimeUnit.MILLISECONDS TimeUnit.MILLISECONDS ))))expression_statement (method_invocation (MetastoreConf setTimeVar argument_list (hiveConf field_access (field_access (MetastoreConf.ConfVars.EVENT_DB_LISTENER_CLEAN_STARTUP_WAIT_INTERVAL MetastoreConf.ConfVars.EVENT_DB_LISTENER_CLEAN_STARTUP_WAIT_INTERVAL )MetastoreConf.ConfVars.EVENT_DB_LISTENER_CLEAN_STARTUP_WAIT_INTERVAL )0 field_access (TimeUnit.SECONDS TimeUnit.SECONDS )))))"
    ],
    "setConnectorInfoForInputAndOutput": [
        "program (local_variable_declaration (AuthenticationToken variable_declarator (token method_invocation (getDelegationToken argument_list (conn ))))try_statement (block (expression_statement (method_invocation (InputConfigurator setConnectorInfo argument_list (class_literal (AccumuloInputFormat )conf method_invocation (params getAccumuloUserName argument_list )token ))))catch_clause (catch_formal_parameter (catch_type (IllegalStateException )e )block (expression_statement (method_invocation (log debug argument_list (\"Ignoring IllegalArgumentException about re-setting connector information\" ))))))try_statement (block (expression_statement (method_invocation (OutputConfigurator setConnectorInfo argument_list (class_literal (AccumuloOutputFormat )conf method_invocation (params getAccumuloUserName argument_list )token ))))catch_clause (catch_formal_parameter (catch_type (IllegalStateException )e )block (expression_statement (method_invocation (log debug argument_list (\"Ignoring IllegalArgumentException about re-setting connector information\" ))))))return_statement (method_invocation (getHadoopToken argument_list (token ))))"
    ],
    "setConnectParams": [
        "program (expression_statement (assignment_expression (field_access (this.connectParams this.connectParams )connectParams )))"
    ],
    "setDefaultAccumuloTableName": [
        "program (expression_statement (method_invocation (AccumuloIndexedOutputFormat setDefaultTableName argument_list (conf tableName ))))"
    ],
    "setIndexColumns": [
        "program (if_statement (parenthesized_expression (binary_expression (tableName null ))block (expression_statement (method_invocation (conf set argument_list (method_invocation (enumToConfKey argument_list (implementingClass field_access (WriteOpts.INDEX_COLUMNS WriteOpts.INDEX_COLUMNS )))tableName ))))))"
    ],
    "setIndexScanner": [
        "program (expression_statement (assignment_expression (field_access (this.indexScanner this.indexScanner )indexScanner )))"
    ],
    "setIndexTableName": [
        "program (if_statement (parenthesized_expression (binary_expression (tableName null ))block (expression_statement (method_invocation (conf set argument_list (method_invocation (enumToConfKey argument_list (implementingClass field_access (WriteOpts.INDEX_TABLE_NAME WriteOpts.INDEX_TABLE_NAME )))tableName ))))))"
    ],
    "setInputTableName": [
        "program (expression_statement (method_invocation (AccumuloInputFormat setInputTableName argument_list (conf tableName ))))"
    ],
    "setOutputFormatMockInstance": [
        "program (try_statement (block (expression_statement (method_invocation (AccumuloOutputFormat setMockInstance argument_list (conf instanceName ))))catch_clause (catch_formal_parameter (catch_type (IllegalStateException )e )block (expression_statement (method_invocation (log debug argument_list (binary_expression (\"Ignoring exception setting mock instance of \" instanceName )e )))))))"
    ],
    "setPrimitiveCompare": [
        "program (expression_statement (assignment_expression (field_access (this.comp this.comp )comp )))"
    ],
    "setRanges": [
        "program (expression_statement (method_invocation (AccumuloInputFormat setRanges argument_list (conf ranges ))))"
    ],
    "setRecordEncoding": [
        "program (expression_statement (method_invocation (conf set argument_list (method_invocation (enumToConfKey argument_list (implementingClass field_access (WriteOpts.BINARY_ENCODING WriteOpts.BINARY_ENCODING )))method_invocation (isBinary toString argument_list )))))"
    ],
    "setRowId": [
        "program (expression_statement (assignment_expression (field_access (this.rowId this.rowId )rowId )))"
    ],
    "setScanAuthorizations": [
        "program (expression_statement (method_invocation (AccumuloInputFormat setScanAuthorizations argument_list (conf auths ))))"
    ],
    "setStringEncoding": [
        "program (expression_statement (method_invocation (IndexOutputConfigurator setRecordEncoding argument_list (CLASS job isStringEncoding ))))"
    ],
    "size": [
        "program (return_statement (size ))"
    ],
    "stripCode": [
        "program (expression_statement (method_invocation (Preconditions checkNotNull argument_list (columnMapping )))local_variable_declaration (integral_type variable_declarator (offset method_invocation (columnMapping lastIndexOf argument_list (field_access (AccumuloHiveConstants.POUND AccumuloHiveConstants.POUND )))))if_statement (parenthesized_expression (binary_expression (binary_expression (unary_expression (1 )offset )parenthesized_expression (binary_expression (binary_expression (0 offset )binary_expression (field_access (AccumuloHiveConstants.ESCAPE AccumuloHiveConstants.ESCAPE )method_invocation (columnMapping charAt argument_list (binary_expression (offset 1 ))))))))block (throw_statement (object_creation_expression (IllegalArgumentException argument_list (\"Provided column mapping does not define a column encoding\" )))))return_statement (method_invocation (columnMapping substring argument_list (0 offset ))))"
    ],
    "toLazyObject": [
        "program (local_variable_declaration (ObjectInspector variable_declarator (fieldOI method_invocation (method_invocation (method_invocation (oi getAllStructFieldRefs argument_list )get argument_list (fieldID ))getFieldObjectInspector argument_list )))local_variable_declaration (generic_type (LazyObject type_arguments (wildcard (ObjectInspector )))variable_declarator (lazyObject method_invocation (LazyFactory createLazyObject argument_list (fieldOI ))))local_variable_declaration (ByteArrayRef variable_declarator (ref object_creation_expression (ByteArrayRef argument_list )))expression_statement (method_invocation (ref setData argument_list (bytes )))expression_statement (method_invocation (lazyObject init argument_list (ref 0 field_access (method_invocation (ref getData argument_list )ref.getData().length ))))return_statement (lazyObject ))"
    ],
    "toSetting": [
        "program (expression_statement (update_expression (iteratorCount ))local_variable_declaration (modifiers IteratorSetting variable_declarator (is object_creation_expression (IteratorSetting argument_list (iteratorCount binary_expression (field_access (PrimitiveComparisonFilter.FILTER_PREFIX PrimitiveComparisonFilter.FILTER_PREFIX )iteratorCount )class_literal (PrimitiveComparisonFilter )))))local_variable_declaration (modifiers String variable_declarator (type ternary_expression (binaryEncodedValues method_invocation (method_invocation (sc getColumnDesc argument_list )getTypeString argument_list )method_invocation (field_access (ColumnEncoding.STRING ColumnEncoding.STRING )getName argument_list ))))local_variable_declaration (modifiers String variable_declarator (comparisonOpStr method_invocation (sc getComparisonOp argument_list )))local_variable_declaration (PushdownTuple variable_declarator (tuple ))try_statement (block (expression_statement (assignment_expression (tuple object_creation_expression (PushdownTuple argument_list (sc method_invocation (getPrimitiveComparison argument_list (type sc ))method_invocation (getCompareOp argument_list (comparisonOpStr sc )))))))catch_clause (catch_formal_parameter (catch_type (NoSuchPrimitiveComparisonException )e )block (throw_statement (object_creation_expression (SerDeException argument_list (binary_expression (\"No configured PrimitiveComparison class for \" type )e )))))catch_clause (catch_formal_parameter (catch_type (NoSuchCompareOpException )e )block (throw_statement (object_creation_expression (SerDeException argument_list (binary_expression (\"No configured CompareOp class for \" comparisonOpStr )e ))))))expression_statement (method_invocation (is addOption argument_list (field_access (PrimitiveComparisonFilter.P_COMPARE_CLASS PrimitiveComparisonFilter.P_COMPARE_CLASS )method_invocation (method_invocation (method_invocation (tuple getpCompare argument_list )getClass argument_list )getName argument_list ))))expression_statement (method_invocation (is addOption argument_list (field_access (PrimitiveComparisonFilter.COMPARE_OPT_CLASS PrimitiveComparisonFilter.COMPARE_OPT_CLASS )method_invocation (method_invocation (method_invocation (tuple getcOpt argument_list )getClass argument_list )getName argument_list ))))expression_statement (method_invocation (is addOption argument_list (field_access (PrimitiveComparisonFilter.CONST_VAL PrimitiveComparisonFilter.CONST_VAL )method_invocation (method_invocation (Base64 getEncoder argument_list )encodeToString argument_list (method_invocation (tuple getConstVal argument_list ))))))expression_statement (method_invocation (is addOption argument_list (field_access (PrimitiveComparisonFilter.COLUMN PrimitiveComparisonFilter.COLUMN )method_invocation (accumuloColumnMapping serialize argument_list ))))return_statement (is ))"
    ],
    "toString": [
        "program (return_statement (name ))"
    ],
    "uncheckedGetField": [
        "program (local_variable_declaration (array_type (LazyObjectBase dimensions )variable_declarator (fields method_invocation (getFields argument_list )))local_variable_declaration (array_type (boolean dimensions )variable_declarator (fieldsInited method_invocation (getFieldInited argument_list )))if_statement (parenthesized_expression (unary_expression (array_access (fieldsInited fieldID )))block (expression_statement (assignment_expression (array_access (fieldsInited fieldID )true ))local_variable_declaration (ColumnMapping variable_declarator (colMap array_access (columnsMapping fieldID )))if_statement (parenthesized_expression (binary_expression (binary_expression (unary_expression (field_access (colMap.hbaseRowKey colMap.hbaseRowKey ))unary_expression (field_access (colMap.hbaseTimestamp colMap.hbaseTimestamp )))binary_expression (field_access (colMap.qualifierName colMap.qualifierName )null )))block (expression_statement (method_invocation (parenthesized_expression (cast_expression (LazyHBaseCellMap array_access (fields fieldID )))init argument_list (result field_access (colMap.familyNameBytes colMap.familyNameBytes )field_access (colMap.binaryStorage colMap.binaryStorage )field_access (colMap.qualifierPrefixBytes colMap.qualifierPrefixBytes )method_invocation (colMap isDoPrefixCut argument_list ))))return_statement (method_invocation (array_access (fields fieldID )getObject argument_list ))))if_statement (parenthesized_expression (field_access (colMap.hbaseTimestamp colMap.hbaseTimestamp ))block (local_variable_declaration (integral_type variable_declarator (timestamp method_invocation (array_access (method_invocation (result rawCells argument_list )0 )getTimestamp argument_list )))for_statement (local_variable_declaration (integral_type variable_declarator (i 1 ))binary_expression (i field_access (method_invocation (result rawCells argument_list )result.rawCells().length ))update_expression (i )block (expression_statement (assignment_expression (timestamp method_invocation (Math max argument_list (timestamp method_invocation (array_access (method_invocation (result rawCells argument_list )i )getTimestamp argument_list )))))))local_variable_declaration (LazyObjectBase variable_declarator (lz array_access (fields fieldID )))if_statement (parenthesized_expression (instanceof_expression (lz LazyTimestamp ))block (expression_statement (method_invocation (method_invocation (parenthesized_expression (cast_expression (LazyTimestamp lz ))getWritableObject argument_list )set argument_list (method_invocation (Timestamp ofEpochMilli argument_list (timestamp ))))))block (expression_statement (method_invocation (method_invocation (parenthesized_expression (cast_expression (LazyLong lz ))getWritableObject argument_list )set argument_list (timestamp )))))return_statement (method_invocation (lz getObject argument_list ))))local_variable_declaration (array_type (integral_type dimensions )variable_declarator (bytes ))if_statement (parenthesized_expression (field_access (colMap.hbaseRowKey colMap.hbaseRowKey ))block (expression_statement (assignment_expression (bytes method_invocation (result getRow argument_list ))))block (expression_statement (assignment_expression (bytes method_invocation (result getValue argument_list (field_access (colMap.familyNameBytes colMap.familyNameBytes )field_access (colMap.qualifierNameBytes colMap.qualifierNameBytes )))))))if_statement (parenthesized_expression (binary_expression (binary_expression (bytes null )method_invocation (isNull argument_list (method_invocation (oi getNullSequence argument_list )bytes 0 field_access (bytes.length bytes.length )))))block (expression_statement (method_invocation (array_access (fields fieldID )setNull argument_list )))block (local_variable_declaration (ByteArrayRef variable_declarator (ref object_creation_expression (ByteArrayRef argument_list )))expression_statement (method_invocation (ref setData argument_list (bytes )))expression_statement (method_invocation (array_access (fields fieldID )init argument_list (ref 0 field_access (bytes.length bytes.length ))))))))return_statement (method_invocation (array_access (fields fieldID )getObject argument_list )))"
    ],
    "updateConfWithAccumuloToken": [
        "program (if_statement (parenthesized_expression (binary_expression (method_invocation (getAccumuloToken argument_list (currentUser ))null ))block (expression_statement (method_invocation (addTokenFromUserToJobConf argument_list (currentUser jobConf ))))block (try_statement (block (local_variable_declaration (Connector variable_declarator (connector method_invocation (cnxnParams getConnector argument_list )))local_variable_declaration (AuthenticationToken variable_declarator (token method_invocation (getDelegationToken argument_list (connector ))))if_statement (parenthesized_expression (isInputFormat )block (expression_statement (method_invocation (setInputFormatConnectorInfo argument_list (jobConf method_invocation (cnxnParams getAccumuloUserName argument_list )token ))))block (expression_statement (method_invocation (setOutputFormatConnectorInfo argument_list (jobConf method_invocation (cnxnParams getAccumuloUserName argument_list )token )))))local_variable_declaration (generic_type (Token type_arguments (wildcard (TokenIdentifier )))variable_declarator (accumuloToken method_invocation (getHadoopToken argument_list (token ))))expression_statement (method_invocation (mergeTokenIntoJobConf argument_list (jobConf accumuloToken )))if_statement (parenthesized_expression (unary_expression (method_invocation (currentUser addToken argument_list (accumuloToken ))))block (throw_statement (object_creation_expression (IOException argument_list (\"Failed to add Accumulo Token to UGI\" )))))try_statement (block (expression_statement (method_invocation (addTokenFromUserToJobConf argument_list (currentUser jobConf ))))catch_clause (catch_formal_parameter (catch_type (IOException )e )block (throw_statement (object_creation_expression (IOException argument_list (binary_expression (\"Current user did not contain necessary delegation Tokens \" currentUser )e )))))))catch_clause (catch_formal_parameter (catch_type (AccumuloException AccumuloSecurityException )e )block (throw_statement (object_creation_expression (IOException argument_list (\"Failed to acquire Accumulo DelegationToken\" e )))))))))"
    ],
    "updateInputFormatConfWithAccumuloToken": [
        "program (expression_statement (method_invocation (updateConfWithAccumuloToken argument_list (jobConf currentUser cnxnParams true ))))"
    ],
    "updateOutputFormatConfWithAccumuloToken": [
        "program (expression_statement (method_invocation (updateConfWithAccumuloToken argument_list (jobConf currentUser cnxnParams false ))))"
    ],
    "useMockInstance": [
        "program (expression_statement (method_invocation (Preconditions checkNotNull argument_list (conf )))return_statement (method_invocation (conf getBoolean argument_list (USE_MOCK_INSTANCE false ))))"
    ],
    "useSasl": [
        "program (expression_statement (method_invocation (Preconditions checkNotNull argument_list (conf )))return_statement (method_invocation (conf getBoolean argument_list (SASL_ENABLED false ))))"
    ],
    "writeWithLevel": [
        "program (switch_expression (parenthesized_expression (method_invocation (oi getCategory argument_list ))switch_block (switch_block_statement_group (switch_label (PRIMITIVE )if_statement (parenthesized_expression (binary_expression (method_invocation (mapping getEncoding argument_list )field_access (ColumnEncoding.BINARY ColumnEncoding.BINARY )))block (expression_statement (method_invocation (this writeBinary argument_list (output value cast_expression (PrimitiveObjectInspector oi )))))block (expression_statement (method_invocation (this writeString argument_list (output value cast_expression (PrimitiveObjectInspector oi ))))))return_statement )switch_block_statement_group (switch_label (LIST )local_variable_declaration (integral_type variable_declarator (separator cast_expression (integral_type array_access (method_invocation (serDeParams getSeparators argument_list )level ))))local_variable_declaration (ListObjectInspector variable_declarator (loi cast_expression (ListObjectInspector oi )))local_variable_declaration (generic_type (List type_arguments (wildcard ))variable_declarator (list method_invocation (loi getList argument_list (value ))))local_variable_declaration (ObjectInspector variable_declarator (eoi method_invocation (loi getListElementObjectInspector argument_list )))if_statement (parenthesized_expression (binary_expression (list null ))block (expression_statement (method_invocation (log debug argument_list (\"No objects found when serializing list\" )))return_statement )block (for_statement (local_variable_declaration (integral_type variable_declarator (i 0 ))binary_expression (i method_invocation (list size argument_list ))update_expression (i )block (if_statement (parenthesized_expression (binary_expression (i 0 ))block (expression_statement (method_invocation (output write argument_list (separator )))))expression_statement (method_invocation (writeWithLevel argument_list (eoi method_invocation (list get argument_list (i ))output mapping binary_expression (level 1 ))))))))return_statement )switch_block_statement_group (switch_label (MAP )local_variable_declaration (integral_type variable_declarator (sep cast_expression (integral_type array_access (method_invocation (serDeParams getSeparators argument_list )level ))))local_variable_declaration (integral_type variable_declarator (keyValueSeparator cast_expression (integral_type array_access (method_invocation (serDeParams getSeparators argument_list )binary_expression (level 1 )))))local_variable_declaration (MapObjectInspector variable_declarator (moi cast_expression (MapObjectInspector oi )))local_variable_declaration (ObjectInspector variable_declarator (koi method_invocation (moi getMapKeyObjectInspector argument_list )))local_variable_declaration (ObjectInspector variable_declarator (voi method_invocation (moi getMapValueObjectInspector argument_list )))local_variable_declaration (generic_type (Map type_arguments (wildcard wildcard ))variable_declarator (map method_invocation (moi getMap argument_list (value ))))if_statement (parenthesized_expression (binary_expression (map null ))block (expression_statement (method_invocation (log debug argument_list (\"No object found when serializing map\" )))return_statement )block (local_variable_declaration (boolean variable_declarator (first true ))enhanced_for_statement (generic_type (scoped_type_identifier (Map Entry )type_arguments (wildcard wildcard ))entry method_invocation (map entrySet argument_list )block (if_statement (parenthesized_expression (first )block (expression_statement (assignment_expression (first false )))block (expression_statement (method_invocation (output write argument_list (sep )))))expression_statement (method_invocation (writeWithLevel argument_list (koi method_invocation (entry getKey argument_list )output mapping binary_expression (level 2 ))))expression_statement (method_invocation (output write argument_list (keyValueSeparator )))expression_statement (method_invocation (writeWithLevel argument_list (voi method_invocation (entry getValue argument_list )output mapping binary_expression (level 2 ))))))))return_statement )switch_block_statement_group (switch_label (STRUCT )expression_statement (assignment_expression (sep cast_expression (integral_type array_access (method_invocation (serDeParams getSeparators argument_list )level ))))local_variable_declaration (StructObjectInspector variable_declarator (soi cast_expression (StructObjectInspector oi )))local_variable_declaration (generic_type (List type_arguments (wildcard (StructField )))variable_declarator (fields method_invocation (soi getAllStructFieldRefs argument_list )))expression_statement (assignment_expression (list method_invocation (soi getStructFieldsDataAsList argument_list (value ))))if_statement (parenthesized_expression (binary_expression (list null ))block (expression_statement (method_invocation (log debug argument_list (\"No object found when serializing struct\" )))return_statement )block (for_statement (local_variable_declaration (integral_type variable_declarator (i 0 ))binary_expression (i method_invocation (list size argument_list ))update_expression (i )block (if_statement (parenthesized_expression (binary_expression (i 0 ))block (expression_statement (method_invocation (output write argument_list (sep )))))expression_statement (method_invocation (writeWithLevel argument_list (method_invocation (method_invocation (fields get argument_list (i ))getFieldObjectInspector argument_list )method_invocation (list get argument_list (i ))output mapping binary_expression (level 1 ))))))))return_statement )switch_block_statement_group (switch_label throw_statement (object_creation_expression (RuntimeException argument_list (binary_expression (\"Unknown category type: \" method_invocation (oi getCategory argument_list )))))))))"
    ],
    "write": [
        "program (expression_statement (method_invocation (storageFormatTest writeRecords argument_list (recordWriter recordWritable ))))"
    ]
}